[{"F:\\reactjs\\prenotes\\src\\App.js":"1","F:\\reactjs\\prenotes\\src\\services\\httpService.js":"2","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx":"3","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx":"4","F:\\reactjs\\prenotes\\src\\index.js":"5","F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx":"6","F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx":"7","F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx":"8","F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx":"9","F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx":"10","F:\\reactjs\\prenotes\\src\\context\\createDataContext.js":"11","F:\\reactjs\\prenotes\\src\\context\\AuthContext.js":"12","F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js":"13","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx":"14","F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx":"15","F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx":"16","F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx":"17","F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js":"18","F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx":"19","F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx":"20"},{"size":589,"mtime":1607871639440,"results":"21","hashOfConfig":"22"},{"size":923,"mtime":1607839525268,"results":"23","hashOfConfig":"22"},{"size":2162,"mtime":1608223634850,"results":"24","hashOfConfig":"22"},{"size":15321,"mtime":1608259382410,"results":"25","hashOfConfig":"22"},{"size":219,"mtime":1607270798331,"results":"26","hashOfConfig":"22"},{"size":327,"mtime":1607503403301,"results":"27","hashOfConfig":"22"},{"size":4659,"mtime":1608262474869,"results":"28","hashOfConfig":"22"},{"size":2905,"mtime":1608225171852,"results":"29","hashOfConfig":"22"},{"size":2283,"mtime":1607957147158,"results":"30","hashOfConfig":"22"},{"size":2643,"mtime":1608223650918,"results":"31","hashOfConfig":"22"},{"size":547,"mtime":1607870751521,"results":"32","hashOfConfig":"22"},{"size":2154,"mtime":1608225360274,"results":"33","hashOfConfig":"22"},{"size":1337,"mtime":1607956634961,"results":"34","hashOfConfig":"22"},{"size":5073,"mtime":1608226320773,"results":"35","hashOfConfig":"22"},{"size":1171,"mtime":1607914471486,"results":"36","hashOfConfig":"22"},{"size":19858,"mtime":1608261603444,"results":"37","hashOfConfig":"22"},{"size":2017,"mtime":1607925651202,"results":"38","hashOfConfig":"22"},{"size":989,"mtime":1607935394705,"results":"39","hashOfConfig":"22"},{"size":2671,"mtime":1607947258141,"results":"40","hashOfConfig":"22"},{"size":6440,"mtime":1607591030778,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zyjns1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"F:\\reactjs\\prenotes\\src\\App.js",[],["93","94"],"F:\\reactjs\\prenotes\\src\\services\\httpService.js",["95"],"import axios from \"axios\";\r\n\r\nconst BASE = process.env.REACT_APP_BASE_URL;\r\n\r\naxios.defaults.baseURL = BASE;\r\n// axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n// axios.interceptors.response.use(null, (error) => {\r\n//   const expectedError =\r\n//     error.response &&\r\n//     error.response.status >= 400 &&\r\n//     error.response.status < 500;\r\n//   if (!expectedError) {\r\n//     logger.log(error);\r\n//     toast.error(\"An unexpected error occurred\");\r\n//   }\r\n//   return Promise.reject(error);\r\n// });\r\naxios.interceptors.request.use(\r\n  async (config) => {\r\n    const token = await sessionStorage.getItem(\"preNotest\");\r\n\r\n    if (token) {\r\n      config.headers.Authorization = `Pre@Notes20 ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx",[],"F:\\reactjs\\prenotes\\src\\index.js",[],["96","97"],"F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx",[],["98","99"],"F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx",["100"],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx",[],"F:\\reactjs\\prenotes\\src\\context\\createDataContext.js",["101"],"import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, defaultValue) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, defaultValue);\r\n    const boundActions = {};\r\n\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n  return { Context, Provider };\r\n};\r\n","F:\\reactjs\\prenotes\\src\\context\\AuthContext.js",[],"F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js",["102"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Context as AuthContext } from \"../context/AuthContext\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Home from \"../components/Home/Home\";\r\nimport Profile from \"../components/Profile/Profile\";\r\nimport Messanger from \"../components/Messanger/Messanger\";\r\n\r\nconst Navigation = () => {\r\n  const { tryLocalSignin, getUserDetails } = useContext(AuthContext);\r\n\r\n  const getUser = async () => {\r\n    const id = await tryLocalSignin();\r\n    if (id) getUserDetails(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Navbar />\r\n      <div className=\"app_container\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/myprofile\" exact component={Profile} />\r\n          <Route path=\"/myprofile/personalInfo\" exact component={Profile} />\r\n          <Route path=\"/myprofile/myuploads\" exact component={Profile} />\r\n          <Route path=\"/myprofile/changepassword\" exact component={Profile} />\r\n          <Route path=\"/messages\" component={Messanger} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n",["103","104"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx",["105"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  message,\r\n  Modal,\r\n  Select,\r\n  Upload,\r\n} from \"antd\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport http from \"../../services/httpService\";\r\nimport {\r\n  UserOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD/MM/YYYY\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst PersonalInfo = () => {\r\n  const { state, getUserDetails } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [visibleInfo, setVisibleInfo] = useState(false);\r\n  const [visibleEdu, setVisibleEdu] = useState(false);\r\n  const [visiblePic, setVisiblePic] = useState(false);\r\n  const [imageData, setImageData] = useState({\r\n    loading: false,\r\n    imgUrl: null,\r\n  });\r\n  const [disabledAddr, setDisabledAddr] = useState(0);\r\n  const BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const actionUrl = BASEURL + \"user/profile/\" + userData.iduser;\r\n\r\n  const [infoForm] = Form.useForm();\r\n  const [eduForm] = Form.useForm();\r\n  const [basicForm] = Form.useForm();\r\n  const [edForm] = Form.useForm();\r\n\r\n  const handleCancel = () => {\r\n    setVisibleInfo(false);\r\n    setVisibleEdu(false);\r\n  };\r\n\r\n  const handleIsHosteler = (e) => {\r\n    setDisabledAddr(e.target.value);\r\n  };\r\n\r\n  const handleBasicInfo = () => {\r\n    basicForm.setFieldsValue({\r\n      name: userData.name,\r\n      dob: moment(userData.dob),\r\n      mno: userData.mno,\r\n      gender: userData.gender,\r\n      email: userData.email,\r\n    });\r\n    setVisibleInfo(true);\r\n  };\r\n  const handleEdu = () => {\r\n    edForm.setFieldsValue({\r\n      institute: userData.institute,\r\n      branch: userData.branch,\r\n      sem: userData.sem,\r\n      batch: [moment(userData.batchStart), moment(userData.batchEnd)],\r\n      regno: userData.regno,\r\n      hosteler: userData.hosteler,\r\n      hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n    });\r\n\r\n    setVisibleEdu(true);\r\n  };\r\n\r\n  const submitBasicInfo = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    http\r\n      .put(\"user/updateprofile/\" + userData.iduser, values)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        basicForm.resetFields();\r\n        setVisibleInfo(false);\r\n        message.success(\"Profile Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const submitEdu = (values) => {\r\n    console.log(\"Success:\", values);\r\n    let data = {\r\n      ...values,\r\n\r\n      batchStart: values.batch[0],\r\n      batchEnd: values.batch[1],\r\n      hostelAddress: values.hosteler ? values.hostelAddress : null,\r\n    };\r\n    delete data.batch;\r\n    http\r\n      .put(\"user/updateEdu/\" + userData.iduser, data)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        edForm.resetFields();\r\n        setVisibleEdu(false);\r\n        message.success(\"Education Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    setImageData({ loading: true, imgUrl: null });\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) =>\r\n        setImageData({ loading: false, imgUrl: imageUrl })\r\n      );\r\n      getUserDetails(userData.iduser);\r\n      message.success(\"Profile Image Updated Successfully\", 3);\r\n      setVisiblePic(false);\r\n    }\r\n    if (info.file.status === \"error\") {\r\n      message.error(\"Failed\", 3);\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {imageData.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(userData);\r\n    if (userData) {\r\n      infoForm.setFieldsValue({\r\n        name: userData.name,\r\n        dob: moment(userData.dob).format(dateFormat),\r\n        mno: Number(userData.mno),\r\n        gender: userData.gender,\r\n        email: userData.email,\r\n      });\r\n      setDisabledAddr(userData.hosteler);\r\n      eduForm.setFieldsValue({\r\n        institute: userData.institute,\r\n        branch: userData.branch,\r\n        sem: Number(userData.sem),\r\n        batch: `${moment(userData.batchStart).format(\"YYYY\")} - ${moment(\r\n          userData.batchEnd\r\n        ).format(\"YYYY\")}`,\r\n        regno: userData.regno,\r\n        hosteler: userData.hosteler ? \"Yes\" : \"No\",\r\n        hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n      });\r\n    }\r\n  }, [userData]);\r\n  console.log(userData);\r\n  return (\r\n    <div>\r\n      <div className=\"innerWrapper\">\r\n        <div className=\"avatar_wrapper\">\r\n          <Avatar\r\n            size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 100, xxl: 100 }}\r\n            src={\r\n              userData.profileImg != null ? BASEURL + userData.profileImg : null\r\n            }\r\n            icon={<UserOutlined />}\r\n            key={userData.profileImg}\r\n          />\r\n          <Button className=\"btn\" onClick={() => setVisiblePic(true)}>\r\n            Change Photo\r\n          </Button>\r\n        </div>\r\n        <div className=\"heading_wrap\">\r\n          <h3>Basic Information</h3>\r\n          <div className=\"circle\" onClick={handleBasicInfo}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n\r\n        <Form form={infoForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Name\" name=\"name\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"DOB\" name=\"dob\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Mobile Number\" name=\"mno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Gender\" name=\"gender\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Email\" name=\"email\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"heading_wrap\">\r\n          <h3>Education</h3>\r\n          <div className=\"circle\" onClick={handleEdu}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n        <Form form={eduForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Institution\" name=\"institute\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                  {/* <Option value={3}>Communicated</Option>\r\n                      <Option value={4}>Identified</Option> */}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Branch\" name=\"branch\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Semester\" name=\"sem\">\r\n                <Select size=\"large\">\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label={\"Batch\"} name=\"batch\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Registration No.\" name=\"regno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item name=\"hosteler\" label=\"Hosteler\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <Modal\r\n        visible={visibleInfo}\r\n        title=\"Basic Information\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={basicForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={basicForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitBasicInfo}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Please input your name!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"DOB\"\r\n                name=\"dob\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <DatePicker\r\n                  allowClear={false}\r\n                  style={{ width: \"100%\" }}\r\n                  format={dateFormat}\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Mobile Number\"\r\n                name=\"mno\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your mobile number!\",\r\n                  },\r\n                  {\r\n                    minLength: 10,\r\n                    maxLength: 10,\r\n                    pattern: \"^[0-9]{10}$\",\r\n                    message: \"Must be 10 digits\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"tel\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                >\r\n                  <Radio.Button value=\"Male\">Male</Radio.Button>\r\n                  <Radio.Button value=\"Female\">Female</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your username!\",\r\n                  },\r\n                  { type: \"email\", message: \"Please input valid email!\" },\r\n                ]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        visible={visibleEdu}\r\n        title=\"Education\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={edForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={edForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitEdu}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Institution\"\r\n                name=\"institute\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select College\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                  {/* <Option value={3}>Communicated</Option>\r\n                      <Option value={4}>Identified</Option> */}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Branch\"\r\n                name=\"branch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select Branch\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Semester\"\r\n                name=\"sem\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Required!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select size=\"large\">\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label={\"Batch\"}\r\n                name=\"batch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <RangePicker\r\n                  style={{ width: \"100%\" }}\r\n                  picker=\"year\"\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Registration No.\"\r\n                name=\"regno\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hosteler\"\r\n                label=\"Hosteler\"\r\n                rules={[{ required: true, message: \"Please pick an item!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                  onChange={handleIsHosteler}\r\n                >\r\n                  <Radio.Button value={1}>Yes</Radio.Button>\r\n                  <Radio.Button value={0}>No</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hostelAddress\"\r\n                label=\"Hostel Address\"\r\n                rules={[{ required: disabledAddr, message: \"Required!\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  maxLength={250}\r\n                  rows={2}\r\n                  disabled={!disabledAddr}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={visiblePic}\r\n        title=\"Change Profile Image\"\r\n        onCancel={() => setVisiblePic(false)}\r\n        footer={null}\r\n        style={{ textAlign: \"center\", maxWidth: \"300px\" }}\r\n      >\r\n        <Upload\r\n          name=\"photo\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={actionUrl}\r\n          beforeUpload={beforeUpload}\r\n          onChange={handleChange}\r\n        >\r\n          {imageData.imgUrl ? (\r\n            <img\r\n              src={imageData.imgUrl}\r\n              alt=\"avatar\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            uploadButton\r\n          )}\r\n        </Upload>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx",["106"],"import React from \"react\";\r\nimport { Button, Card, Form, Input, message } from \"antd\";\r\nimport http from \"../../../services/httpService\";\r\nimport \"./changepassword.css\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { span: 24 },\r\n};\r\n\r\nconst ChangePassword = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    let data = {\r\n      iduser: 1,\r\n      ...values,\r\n    };\r\n    http\r\n      .post(\"/user/changepassword\", data)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        form.resetFields();\r\n        message.success(\"Password Changed Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"changePassword\">\r\n      <div className=\"wrapper\">\r\n        <h2>Change Password</h2>\r\n        <p>Avoid sharing your password with others.</p>\r\n        <Form\r\n          form={form}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"Old Password\"\r\n            name=\"oldPassword\"\r\n            rules={[\r\n              { required: true, message: \"Please input your old password!\" },\r\n            ]}\r\n          >\r\n            <Input.Password size=\"large\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"New Password\"\r\n            name=\"newPassword\"\r\n            rules={[\r\n              { required: true, message: \"Please input your new password!\" },\r\n            ]}\r\n          >\r\n            <Input.Password size=\"large\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              CHANGE PASSWORD\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n",["107","108"],"F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js",[],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx",[],["109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":32,"column":1,"nodeType":"117","endLine":37,"endColumn":3},{"ruleId":"111","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"111","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":47,"column":15,"nodeType":"124","endLine":47,"endColumn":55},{"ruleId":"115","severity":1,"message":"125","line":3,"column":1,"nodeType":"117","endLine":21,"endColumn":3},{"ruleId":"126","severity":1,"message":"127","line":20,"column":6,"nodeType":"128","endLine":20,"endColumn":8,"suggestions":"129"},{"ruleId":"111","replacedBy":"130"},{"ruleId":"113","replacedBy":"131"},{"ruleId":"126","severity":1,"message":"132","line":193,"column":6,"nodeType":"128","endLine":193,"endColumn":16,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":18,"nodeType":"136","messageId":"137","endLine":2,"endColumn":22},{"ruleId":"111","replacedBy":"138"},{"ruleId":"113","replacedBy":"139"},{"ruleId":"111","replacedBy":"140"},{"ruleId":"113","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["142"],["143"],["142"],["143"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["144"],["142"],["143"],"React Hook useEffect has missing dependencies: 'eduForm' and 'infoForm'. Either include them or remove the dependency array.",["145"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar",["142"],["143"],["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [getUser]",{"range":"150","text":"151"},"Update the dependencies array to be: [eduForm, infoForm, userData]",{"range":"152","text":"153"},[692,694],"[getUser]",[5410,5420],"[eduForm, infoForm, userData]"]