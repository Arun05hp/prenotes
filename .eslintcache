[{"F:\\reactjs\\prenotes\\src\\App.js":"1","F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js":"2","F:\\reactjs\\prenotes\\src\\components\\Exam\\Upload\\ExamUpload.jsx":"3","F:\\reactjs\\prenotes\\src\\context\\createDataContext.js":"4","F:\\reactjs\\prenotes\\src\\services\\httpService.js":"5","F:\\reactjs\\prenotes\\src\\components\\Notification\\Notification.jsx":"6","F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx":"7","F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx":"8","F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx":"9","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx":"10","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Books\\Books.jsx":"11","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Exampaper\\Exampaper.jsx":"12","F:\\reactjs\\prenotes\\src\\components\\Notes\\Upload\\NotesUpload.jsx":"13","F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx":"14","F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx":"15","F:\\reactjs\\prenotes\\src\\context\\BooksContext.js":"16","F:\\reactjs\\prenotes\\src\\components\\Exam\\Search\\ExamSearch.jsx":"17","F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx":"18","F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx":"19","F:\\reactjs\\prenotes\\src\\context\\SocketProvider.js":"20","F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContainer.jsx":"21","F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContacts.jsx":"22","F:\\reactjs\\prenotes\\src\\index.js":"23","F:\\reactjs\\prenotes\\src\\context\\AuthContext.js":"24","F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js":"25","F:\\reactjs\\prenotes\\src\\components\\Books\\Sell\\SellBook.jsx":"26","F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx":"27","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Notes\\Notes.jsx":"28","F:\\reactjs\\prenotes\\src\\components\\Notes\\Search\\NotesSearch.jsx":"29","F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx":"30","F:\\reactjs\\prenotes\\src\\components\\Books\\Buy\\BuyBook.jsx":"31","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx":"32","F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx":"33","F:\\reactjs\\prenotes\\src\\context\\NotesContext.js":"34","F:\\reactjs\\prenotes\\src\\context\\ConversationsProvider.js":"35","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx":"36","F:\\reactjs\\prenotes\\src\\helper\\useSessionStorage.js":"37","F:\\reactjs\\prenotes\\src\\components\\Tuition\\Reg\\Reg.jsx":"38","F:\\reactjs\\prenotes\\src\\components\\Tuition\\Find\\View.jsx":"39","F:\\reactjs\\prenotes\\src\\components\\Profile\\Tutor\\Tutor.jsx":"40","F:\\reactjs\\prenotes\\src\\components\\Errors\\NotFound.jsx":"41","F:\\reactjs\\prenotes\\src\\components\\protectedRoute.jsx":"42"},{"size":957,"mtime":1609341324525,"results":"43","hashOfConfig":"44"},{"size":3403,"mtime":1609344401372,"results":"45","hashOfConfig":"44"},{"size":7803,"mtime":1608697232450,"results":"46","hashOfConfig":"44"},{"size":547,"mtime":1607870751521,"results":"47","hashOfConfig":"44"},{"size":563,"mtime":1609341957171,"results":"48","hashOfConfig":"44"},{"size":7501,"mtime":1609312102501,"results":"49","hashOfConfig":"44"},{"size":3643,"mtime":1609327153619,"results":"50","hashOfConfig":"44"},{"size":6440,"mtime":1607591030778,"results":"51","hashOfConfig":"44"},{"size":19687,"mtime":1608699643572,"results":"52","hashOfConfig":"44"},{"size":2308,"mtime":1609344351413,"results":"53","hashOfConfig":"44"},{"size":3493,"mtime":1609333895112,"results":"54","hashOfConfig":"44"},{"size":5548,"mtime":1609334433608,"results":"55","hashOfConfig":"44"},{"size":4210,"mtime":1608864949360,"results":"56","hashOfConfig":"44"},{"size":2011,"mtime":1608864968077,"results":"57","hashOfConfig":"44"},{"size":2918,"mtime":1609332555652,"results":"58","hashOfConfig":"44"},{"size":958,"mtime":1609333520329,"results":"59","hashOfConfig":"44"},{"size":8881,"mtime":1609336144930,"results":"60","hashOfConfig":"44"},{"size":4863,"mtime":1609343601673,"results":"61","hashOfConfig":"44"},{"size":4311,"mtime":1609344392192,"results":"62","hashOfConfig":"44"},{"size":624,"mtime":1609003053102,"results":"63","hashOfConfig":"44"},{"size":3637,"mtime":1609053974815,"results":"64","hashOfConfig":"44"},{"size":1496,"mtime":1609326944096,"results":"65","hashOfConfig":"44"},{"size":219,"mtime":1607270798331,"results":"66","hashOfConfig":"44"},{"size":2041,"mtime":1609341349313,"results":"67","hashOfConfig":"44"},{"size":1001,"mtime":1609316035328,"results":"68","hashOfConfig":"44"},{"size":5105,"mtime":1608610849035,"results":"69","hashOfConfig":"44"},{"size":2643,"mtime":1608223650918,"results":"70","hashOfConfig":"44"},{"size":3413,"mtime":1609333970388,"results":"71","hashOfConfig":"44"},{"size":9965,"mtime":1609344753719,"results":"72","hashOfConfig":"44"},{"size":2322,"mtime":1609344379330,"results":"73","hashOfConfig":"44"},{"size":7342,"mtime":1609336022376,"results":"74","hashOfConfig":"44"},{"size":15293,"mtime":1609261124429,"results":"75","hashOfConfig":"44"},{"size":268,"mtime":1609332212930,"results":"76","hashOfConfig":"44"},{"size":1484,"mtime":1609332960389,"results":"77","hashOfConfig":"44"},{"size":3166,"mtime":1609003836063,"results":"78","hashOfConfig":"44"},{"size":657,"mtime":1608811101478,"results":"79","hashOfConfig":"44"},{"size":628,"mtime":1609038541280,"results":"80","hashOfConfig":"44"},{"size":5494,"mtime":1609299561345,"results":"81","hashOfConfig":"44"},{"size":6306,"mtime":1609305873092,"results":"82","hashOfConfig":"44"},{"size":4152,"mtime":1609309232008,"results":"83","hashOfConfig":"44"},{"size":258,"mtime":1609336474226,"results":"84","hashOfConfig":"44"},{"size":686,"mtime":1609344403623,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"zyjns1",{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\reactjs\\prenotes\\src\\App.js",["183"],"F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js",["184","185","186","187","188","189","190"],"F:\\reactjs\\prenotes\\src\\components\\Exam\\Upload\\ExamUpload.jsx",[],["191","192"],"F:\\reactjs\\prenotes\\src\\context\\createDataContext.js",["193"],"import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, defaultValue) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, defaultValue);\r\n    const boundActions = {};\r\n\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n  return { Context, Provider };\r\n};\r\n",["194","195"],"F:\\reactjs\\prenotes\\src\\services\\httpService.js",["196"],"F:\\reactjs\\prenotes\\src\\components\\Notification\\Notification.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx",["197"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  message,\r\n  Modal,\r\n  Select,\r\n  Upload,\r\n} from \"antd\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport http from \"../../services/httpService\";\r\nimport {\r\n  UserOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD/MM/YYYY\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst PersonalInfo = () => {\r\n  const { state, getUserDetails } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [visibleInfo, setVisibleInfo] = useState(false);\r\n  const [visibleEdu, setVisibleEdu] = useState(false);\r\n  const [visiblePic, setVisiblePic] = useState(false);\r\n  const [imageData, setImageData] = useState({\r\n    loading: false,\r\n    imgUrl: null,\r\n  });\r\n  const [disabledAddr, setDisabledAddr] = useState(0);\r\n  const BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const actionUrl = BASEURL + \"user/profile/\" + userData.iduser;\r\n\r\n  const [infoForm] = Form.useForm();\r\n  const [eduForm] = Form.useForm();\r\n  const [basicForm] = Form.useForm();\r\n  const [edForm] = Form.useForm();\r\n\r\n  const handleCancel = () => {\r\n    setVisibleInfo(false);\r\n    setVisibleEdu(false);\r\n  };\r\n\r\n  const handleIsHosteler = (e) => {\r\n    setDisabledAddr(e.target.value);\r\n  };\r\n\r\n  const handleBasicInfo = () => {\r\n    basicForm.setFieldsValue({\r\n      name: userData.name,\r\n      dob: moment(userData.dob),\r\n      mno: userData.mno,\r\n      gender: userData.gender,\r\n      email: userData.email,\r\n    });\r\n    setVisibleInfo(true);\r\n  };\r\n  const handleEdu = () => {\r\n    edForm.setFieldsValue({\r\n      institute: userData.institute,\r\n      branch: userData.branch,\r\n      sem: userData.sem,\r\n      batch: [moment(userData.batchStart), moment(userData.batchEnd)],\r\n      regno: userData.regno,\r\n      hosteler: userData.hosteler,\r\n      hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n    });\r\n\r\n    setVisibleEdu(true);\r\n  };\r\n\r\n  const submitBasicInfo = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    http\r\n      .put(\"user/updateprofile/\" + userData.iduser, values)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        basicForm.resetFields();\r\n        setVisibleInfo(false);\r\n        message.success(\"Profile Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const submitEdu = (values) => {\r\n    console.log(\"Success:\", values);\r\n    let data = {\r\n      ...values,\r\n\r\n      batchStart: values.batch[0],\r\n      batchEnd: values.batch[1],\r\n      hostelAddress: values.hosteler ? values.hostelAddress : null,\r\n    };\r\n    delete data.batch;\r\n    http\r\n      .put(\"user/updateEdu/\" + userData.iduser, data)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        edForm.resetFields();\r\n        setVisibleEdu(false);\r\n        message.success(\"Education Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    setImageData({ loading: true, imgUrl: null });\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) =>\r\n        setImageData({ loading: false, imgUrl: imageUrl })\r\n      );\r\n      getUserDetails(userData.iduser);\r\n      message.success(\"Profile Image Updated Successfully\", 3);\r\n      setVisiblePic(false);\r\n    }\r\n    if (info.file.status === \"error\") {\r\n      message.error(\"Failed\", 3);\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {imageData.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      infoForm.setFieldsValue({\r\n        name: userData.name,\r\n        dob: moment(userData.dob).format(dateFormat),\r\n        mno: Number(userData.mno),\r\n        gender: userData.gender,\r\n        email: userData.email,\r\n      });\r\n      setDisabledAddr(userData.hosteler);\r\n      eduForm.setFieldsValue({\r\n        institute: userData.institute,\r\n        branch: userData.branch,\r\n        sem: Number(userData.sem),\r\n        batch: `${moment(userData.batchStart).format(\"YYYY\")} - ${moment(\r\n          userData.batchEnd\r\n        ).format(\"YYYY\")}`,\r\n        regno: userData.regno,\r\n        hosteler: userData.hosteler ? \"Yes\" : \"No\",\r\n        hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n      });\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"innerWrapper\">\r\n        <div className=\"avatar_wrapper\">\r\n          <Avatar\r\n            size={{ xs: 64, sm: 64, md: 64, lg: 64, xl: 100, xxl: 100 }}\r\n            src={\r\n              userData.profileImg != null ? BASEURL + userData.profileImg : null\r\n            }\r\n            icon={<UserOutlined />}\r\n            key={userData.profileImg}\r\n          />\r\n          <Button className=\"btn\" onClick={() => setVisiblePic(true)}>\r\n            Change Photo\r\n          </Button>\r\n        </div>\r\n        <div className=\"heading_wrap\">\r\n          <h3>Basic Information</h3>\r\n          <div className=\"circle\" onClick={handleBasicInfo}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n\r\n        <Form form={infoForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Name\" name=\"name\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"DOB\" name=\"dob\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Mobile Number\" name=\"mno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Gender\" name=\"gender\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Email\" name=\"email\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"heading_wrap\">\r\n          <h3>Education</h3>\r\n          <div className=\"circle\" onClick={handleEdu}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n        <Form form={eduForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Institution\" name=\"institute\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Branch\" name=\"branch\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Semester\" name=\"sem\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label={\"Batch\"} name=\"batch\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Registration No.\" name=\"regno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item name=\"hosteler\" label=\"Hosteler\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <Modal\r\n        visible={visibleInfo}\r\n        title=\"Basic Information\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={basicForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={basicForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitBasicInfo}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Please input your name!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"DOB\"\r\n                name=\"dob\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <DatePicker\r\n                  allowClear={false}\r\n                  style={{ width: \"100%\" }}\r\n                  format={dateFormat}\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Mobile Number\"\r\n                name=\"mno\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your mobile number!\",\r\n                  },\r\n                  {\r\n                    minLength: 10,\r\n                    maxLength: 10,\r\n                    pattern: \"^[0-9]{10}$\",\r\n                    message: \"Must be 10 digits\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"tel\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                >\r\n                  <Radio.Button value=\"Male\">Male</Radio.Button>\r\n                  <Radio.Button value=\"Female\">Female</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your username!\",\r\n                  },\r\n                  { type: \"email\", message: \"Please input valid email!\" },\r\n                ]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        visible={visibleEdu}\r\n        title=\"Education\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={edForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={edForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitEdu}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Institution\"\r\n                name=\"institute\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select College\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                  {/* <Option value={3}>Communicated</Option>\r\n                      <Option value={4}>Identified</Option> */}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Branch\"\r\n                name=\"branch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select Branch\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Semester\"\r\n                name=\"sem\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Required!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select size=\"large\">\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label={\"Batch\"}\r\n                name=\"batch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <RangePicker\r\n                  style={{ width: \"100%\" }}\r\n                  picker=\"year\"\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Registration No.\"\r\n                name=\"regno\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hosteler\"\r\n                label=\"Hosteler\"\r\n                rules={[{ required: true, message: \"Please pick an item!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                  onChange={handleIsHosteler}\r\n                >\r\n                  <Radio.Button value={1}>Yes</Radio.Button>\r\n                  <Radio.Button value={0}>No</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hostelAddress\"\r\n                label=\"Hostel Address\"\r\n                rules={[{ required: disabledAddr, message: \"Required!\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  maxLength={250}\r\n                  rows={2}\r\n                  disabled={!disabledAddr}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={visiblePic}\r\n        title=\"Change Profile Image\"\r\n        onCancel={() => setVisiblePic(false)}\r\n        footer={null}\r\n        style={{ textAlign: \"center\", maxWidth: \"300px\" }}\r\n      >\r\n        <Upload\r\n          name=\"photo\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={actionUrl}\r\n          beforeUpload={beforeUpload}\r\n          onChange={handleChange}\r\n        >\r\n          {imageData.imgUrl ? (\r\n            <img\r\n              src={imageData.imgUrl}\r\n              alt=\"avatar\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            uploadButton\r\n          )}\r\n        </Upload>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n",["198","199"],"F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Books\\Books.jsx",["200"],"import { DeleteOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Image,\r\n  Popconfirm,\r\n  Row,\r\n  message,\r\n  Skeleton,\r\n} from \"antd\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Context as AuthContext } from \"../../../../context/AuthContext\";\r\nimport { Context as BookContext } from \"../../../../context/BooksContext\";\r\nimport http from \"../../../../services/httpService\";\r\nconst Books = () => {\r\n  let BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const {\r\n    state: { userData },\r\n  } = useContext(AuthContext);\r\n\r\n  const {\r\n    state: { booksData, isLoading },\r\n    getBooks,\r\n  } = useContext(BookContext);\r\n\r\n  const deleteBook = (id) => {\r\n    http\r\n      .delete(\"upload/delbook/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Deleted Successfully\", 3);\r\n        getBooks(userData.iduser);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) getBooks(userData.iduser);\r\n    else return;\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[16, 16]}>\r\n        {isLoading ? (\r\n          <Col md={12} xs={24}>\r\n            <Card className=\"itemWrapper\">\r\n              <Row gutter={8}>\r\n                <Col md={6} xs={6}>\r\n                  <Skeleton.Image active />\r\n                </Col>\r\n                <Col md={18} xs={18}>\r\n                  <div style={{ padding: \"0 10px\" }}>\r\n                    <Skeleton active paragraph={true} />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        ) : booksData.length > 0 ? (\r\n          booksData.map((item) => {\r\n            return (\r\n              <Col md={12} xs={24}>\r\n                <Card className=\"itemWrapper\">\r\n                  <Row gutter={8}>\r\n                    <Col md={6} xs={6}>\r\n                      <Avatar\r\n                        shape=\"square\"\r\n                        src={<Image src={BASEURL + item.fileLink} />}\r\n                      />\r\n                    </Col>\r\n                    <Col md={14} xs={18}>\r\n                      <h3>{item.bookName}</h3>\r\n                      <p>\r\n                        {item.authorName} by {item.publisherName}\r\n                      </p>\r\n                      <h3>Rs {item.price}</h3>\r\n                    </Col>\r\n                    <Col md={4} xs={24}>\r\n                      <div className=\"btnWrapper\">\r\n                        <Popconfirm\r\n                          placement=\"topRight\"\r\n                          title=\"\r\n                Are you sure you want to delete?\"\r\n                          onConfirm={() => deleteBook(item.idbook)}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                        >\r\n                          <Button\r\n                            danger\r\n                            type=\"link\"\r\n                            shape=\"circle\"\r\n                            icon={<DeleteOutlined />}\r\n                          />\r\n                        </Popconfirm>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })\r\n        ) : (\r\n          <Col md={12} sm={12}>\r\n            <Card>No Records</Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Exampaper\\Exampaper.jsx",["201","202","203","204","205","206"],"F:\\reactjs\\prenotes\\src\\components\\Notes\\Upload\\NotesUpload.jsx",["207"],"import { FilePdfOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, message, Select, Upload } from \"antd\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../../context/AuthContext\";\r\nimport http from \"../../../services/httpService\";\r\nimport \"./notesupload.css\";\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nconst NotesUpload = () => {\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [form] = Form.useForm();\r\n  const [fileData, setFileData] = useState({\r\n    fileList: [],\r\n    uploading: false,\r\n  });\r\n\r\n  const handleUpload = (val) => {\r\n    const formData = new FormData();\r\n    fileData.fileList.forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    formData.append(\"topic\", val.topic);\r\n    formData.append(\"iduser\", val.iduser);\r\n    formData.append(\"category\", val.category);\r\n    formData.append(\"description\", val.description);\r\n\r\n    http\r\n      .post(\"upload/pdf\", formData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Notes Uploaded Successfully\", 3);\r\n        form.resetFields();\r\n        setFileData({ fileList: [], uploading: false });\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n  const onFinish = (val) => {\r\n    val.iduser = userData.iduser;\r\n    delete val.file;\r\n    handleUpload(val);\r\n  };\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    onRemove: (file) => {\r\n      setFileData((prev) => {\r\n        const index = fileData.fileList.indexOf(file);\r\n        const newFileList = fileData.fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        return {\r\n          ...prev,\r\n          fileList: newFileList,\r\n        };\r\n      });\r\n    },\r\n    beforeUpload: (file) => {\r\n      if (file.type === \"application/pdf\") {\r\n        setFileData({\r\n          fileList: [file],\r\n        });\r\n      } else {\r\n        message.error(\"Only pdf\");\r\n      }\r\n      return false;\r\n    },\r\n    fileList: fileData.fileList,\r\n    multiple: false,\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes_wrapper\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        initialValues={{ remember: true }}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"Select File\"\r\n          name=\"file\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Select File\",\r\n            },\r\n          ]}\r\n        >\r\n          <Dragger {...props}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <FilePdfOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or Drag file here</p>\r\n          </Dragger>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Topic\"\r\n          name=\"topic\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Topic!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input autoComplete=\"off\" size=\"large\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Required!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select size=\"large\">\r\n            <Option value={1}>Physics</Option>\r\n            <Option value={2}>Chemistry</Option>\r\n            <Option value={3}>Mathematics</Option>\r\n            <Option value={4}>Computer</Option>\r\n            <Option value={5}>Mechanical</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          rules={[{ required: true, message: \"Required!\" }]}\r\n        >\r\n          <Input.TextArea maxLength={250} rows={2} />\r\n        </Form.Item>\r\n\r\n        <div className=\"btn_wrapper\">\r\n          <Button htmlType=\"submit\">Upload</Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesUpload;\r\n","F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx",[],["208","209"],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx",["210"],"import { Col, Row, message } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketProvider } from \"../../context/SocketProvider.js\";\r\nimport ChatContacts from \"./ChatContacts.jsx\";\r\nimport ChatContainer from \"./ChatContainer.jsx\";\r\nimport http from \"../../services/httpService\";\r\nimport useSessionStorage from \"../../helper/useSessionStorage\";\r\nimport mailImg from \"../../assets/images/mail.png\";\r\nimport \"./messanger.css\";\r\n\r\nconst Messanger = () => {\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [id, setId] = useState(-1);\r\n  const [contactLists, setContactsList] = useSessionStorage(\"contacts\", []);\r\n  const [conLoading, setConLoading] = useState(false);\r\n  const [friendDetails, setFriendDetails] = useState({\r\n    id: null,\r\n    userDetails: { name: null, profileImg: null },\r\n    roomId: null,\r\n  });\r\n\r\n  const fetchContacts = (id) => {\r\n    setConLoading(true);\r\n    http\r\n      .get(\"contacts/contacts/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        if (res.contactsData.length > 0) {\r\n          setId(res.contactsData[0].uuid);\r\n          if (res.contactsData[0].contacts) {\r\n            setContactsList(res.contactsData[0].contacts);\r\n          }\r\n        }\r\n        setTimeout(() => {\r\n          setConLoading(false);\r\n        }, 3000);\r\n      })\r\n      .catch((err) => {\r\n        setConLoading(false);\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) fetchContacts(userData.iduser);\r\n    console.log(\"m id\", userData.iduser);\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <SocketProvider id={id}>\r\n      <div className=\"msg_wrapper\">\r\n        <Row gutter={[16, 16]}>\r\n          <Col md={6} xs={24}>\r\n            <ChatContacts\r\n              contactLists={contactLists}\r\n              setFriendDetails={setFriendDetails}\r\n              conLoading={conLoading}\r\n            />\r\n          </Col>\r\n          <Col md={18} xs={24}>\r\n            {friendDetails.id ? (\r\n              <ChatContainer id={id} friendDetails={friendDetails} />\r\n            ) : (\r\n              <div className=\"nomessages\">\r\n                <div className=\"nomsg_body\">\r\n                  <img className=\"mail\" src={mailImg} alt=\"Mail Png\" />\r\n                  <p className=\"title\">No message yet.</p>\r\n                  <p className=\"subtitle\">\r\n                    Once you connect, your messages will be displayed here.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </SocketProvider>\r\n  );\r\n};\r\n\r\nexport default Messanger;\r\n","F:\\reactjs\\prenotes\\src\\context\\BooksContext.js",[],"F:\\reactjs\\prenotes\\src\\components\\Exam\\Search\\ExamSearch.jsx",["211","212","213","214"],"F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx",["215"],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx",["216"],"F:\\reactjs\\prenotes\\src\\context\\SocketProvider.js",[],["217","218"],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContainer.jsx",["219","220"],"import { EllipsisOutlined, SendOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Button, Form, Input, message } from \"antd\";\r\nimport React, { useEffect, useCallback } from \"react\";\r\nimport { useSocket } from \"../../context/SocketProvider\";\r\nimport useSessionStorage from \"../../helper/useSessionStorage\";\r\nimport http from \"../../services/httpService\";\r\nconst BASEURL = process.env.REACT_APP_BASE_URL;\r\nconst ChatContainer = ({ id, friendDetails }) => {\r\n  const [form] = Form.useForm();\r\n  const [messageList, setMessagesList] = useSessionStorage(\"messages\", []);\r\n  const socket = useSocket();\r\n\r\n  const setRef = useCallback((node) => {\r\n    if (node) {\r\n      node.scrollIntoView({ smooth: true });\r\n    }\r\n  }, []);\r\n\r\n  const getMessages = (id) => {\r\n    http\r\n      .get(\"messages/msg/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        console.log(res.messages);\r\n        setMessagesList(res.messages);\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (friendDetails.roomId) getMessages(friendDetails.roomId);\r\n  }, [friendDetails.roomId]);\r\n\r\n  const handleSubmit = (val) => {\r\n    let data = {\r\n      sender: id,\r\n      recipient: friendDetails.id,\r\n      text: val.msg,\r\n      roomId: friendDetails.roomId,\r\n    };\r\n\r\n    socket.emit(\"send-message\", data);\r\n    setMessagesList((prev) => [...prev, { sender: id, text: val.msg }]);\r\n    form.resetFields();\r\n  };\r\n\r\n  const validateMessages = {\r\n    required: \"\",\r\n  };\r\n\r\n  const handleMessages = (msg) => {\r\n    setMessagesList((prev) => [...prev, msg]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return;\r\n\r\n    socket.on(\"receive-message\", handleMessages);\r\n\r\n    return () => socket.off(\"receive-message\");\r\n  }, [socket]);\r\n  return (\r\n    <div className=\"msg_box\">\r\n      <header>\r\n        <div className=\"user\">\r\n          <Avatar\r\n            size={{ xs: 24, sm: 32, md: 40 }}\r\n            src={\r\n              friendDetails.userDetails.profileImg != null\r\n                ? BASEURL + friendDetails.userDetails.profileImg\r\n                : null\r\n            }\r\n          >\r\n            {friendDetails.userDetails.name\r\n              ? friendDetails.userDetails.name.charAt(0)\r\n              : \"\"}\r\n          </Avatar>\r\n          <p className=\"username\"> {friendDetails.userDetails.name}</p>\r\n        </div>\r\n        <EllipsisOutlined rotate={90} />\r\n      </header>\r\n      <div className=\"chat_container\">\r\n        <div className=\"messages\">\r\n          {messageList.map((item, i) => {\r\n            const lastMsg = messageList.length - 1 === i;\r\n            return (\r\n              <div\r\n                ref={lastMsg ? setRef : null}\r\n                key={i}\r\n                className={`${item.sender === id ? \"me\" : \"from\"}`}\r\n              >\r\n                {item.text}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <Form\r\n          form={form}\r\n          className=\"form\"\r\n          onFinish={handleSubmit}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item name=\"msg\" rules={[{ required: true }]}>\r\n            <Input.TextArea rows={1} />\r\n          </Form.Item>\r\n          <div className=\"btn\">\r\n            <Button shape=\"circle\" htmlType=\"submit\">\r\n              <SendOutlined />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n","F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContacts.jsx",[],"F:\\reactjs\\prenotes\\src\\index.js",[],["221","222"],"F:\\reactjs\\prenotes\\src\\context\\AuthContext.js",[],"F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js",[],"F:\\reactjs\\prenotes\\src\\components\\Books\\Sell\\SellBook.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx",[],["223","224"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Notes\\Notes.jsx",["225"],"F:\\reactjs\\prenotes\\src\\components\\Notes\\Search\\NotesSearch.jsx",["226","227","228","229","230","231"],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Books\\Buy\\BuyBook.jsx",["232","233","234"],"F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx",[],"F:\\reactjs\\prenotes\\src\\context\\NotesContext.js",[],"F:\\reactjs\\prenotes\\src\\context\\ConversationsProvider.js",["235"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx",[],"F:\\reactjs\\prenotes\\src\\helper\\useSessionStorage.js",[],"F:\\reactjs\\prenotes\\src\\components\\Tuition\\Reg\\Reg.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Tuition\\Find\\View.jsx",["236","237","238","239","240"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\Tutor\\Tutor.jsx",["241","242"],"F:\\reactjs\\prenotes\\src\\components\\Errors\\NotFound.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\protectedRoute.jsx",[],{"ruleId":"243","severity":1,"message":"244","line":19,"column":45,"nodeType":"245","endLine":19,"endColumn":50},{"ruleId":"246","severity":1,"message":"247","line":22,"column":43,"nodeType":"248","messageId":"249","endLine":22,"endColumn":48},{"ruleId":"250","severity":1,"message":"251","line":35,"column":6,"nodeType":"252","endLine":35,"endColumn":8,"suggestions":"253"},{"ruleId":"243","severity":1,"message":"244","line":41,"column":33,"nodeType":"245","endLine":41,"endColumn":38},{"ruleId":"243","severity":1,"message":"244","line":42,"column":51,"nodeType":"245","endLine":42,"endColumn":56},{"ruleId":"243","severity":1,"message":"244","line":46,"column":13,"nodeType":"245","endLine":46,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":52,"column":13,"nodeType":"245","endLine":52,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":58,"column":13,"nodeType":"245","endLine":58,"endColumn":18},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":3,"column":1,"nodeType":"260","endLine":21,"endColumn":3},{"ruleId":"254","replacedBy":"261"},{"ruleId":"256","replacedBy":"262"},{"ruleId":"258","severity":1,"message":"263","line":21,"column":1,"nodeType":"260","endLine":26,"endColumn":3},{"ruleId":"250","severity":1,"message":"264","line":192,"column":6,"nodeType":"252","endLine":192,"endColumn":16,"suggestions":"265"},{"ruleId":"254","replacedBy":"266"},{"ruleId":"256","replacedBy":"267"},{"ruleId":"250","severity":1,"message":"268","line":46,"column":6,"nodeType":"252","endLine":46,"endColumn":23,"suggestions":"269"},{"ruleId":"246","severity":1,"message":"270","line":51,"column":10,"nodeType":"248","messageId":"249","endLine":51,"endColumn":14},{"ruleId":"246","severity":1,"message":"271","line":56,"column":12,"nodeType":"248","messageId":"249","endLine":56,"endColumn":19},{"ruleId":"250","severity":1,"message":"272","line":63,"column":6,"nodeType":"252","endLine":63,"endColumn":23,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":132,"column":64,"nodeType":"245","endLine":132,"endColumn":79},{"ruleId":"276","severity":1,"message":"277","line":140,"column":44,"nodeType":"278","messageId":"279","endLine":140,"endColumn":46},{"ruleId":"274","severity":1,"message":"275","line":143,"column":31,"nodeType":"245","endLine":143,"endColumn":46},{"ruleId":"246","severity":1,"message":"280","line":10,"column":9,"nodeType":"248","messageId":"249","endLine":10,"endColumn":16},{"ruleId":"254","replacedBy":"281"},{"ruleId":"256","replacedBy":"282"},{"ruleId":"250","severity":1,"message":"283","line":53,"column":6,"nodeType":"252","endLine":53,"endColumn":23,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":141,"column":9,"nodeType":"287","endLine":141,"endColumn":37},{"ruleId":"274","severity":1,"message":"275","line":228,"column":33,"nodeType":"245","endLine":228,"endColumn":48},{"ruleId":"276","severity":1,"message":"277","line":237,"column":48,"nodeType":"278","messageId":"279","endLine":237,"endColumn":50},{"ruleId":"274","severity":1,"message":"275","line":240,"column":35,"nodeType":"245","endLine":240,"endColumn":50},{"ruleId":"285","severity":1,"message":"286","line":56,"column":15,"nodeType":"287","endLine":56,"endColumn":55},{"ruleId":"246","severity":1,"message":"288","line":2,"column":18,"nodeType":"248","messageId":"249","endLine":2,"endColumn":23},{"ruleId":"254","replacedBy":"289"},{"ruleId":"256","replacedBy":"290"},{"ruleId":"250","severity":1,"message":"291","line":38,"column":6,"nodeType":"252","endLine":38,"endColumn":28,"suggestions":"292"},{"ruleId":"250","severity":1,"message":"293","line":67,"column":6,"nodeType":"252","endLine":67,"endColumn":14,"suggestions":"294"},{"ruleId":"254","replacedBy":"295"},{"ruleId":"256","replacedBy":"296"},{"ruleId":"254","replacedBy":"297"},{"ruleId":"256","replacedBy":"298"},{"ruleId":"250","severity":1,"message":"299","line":52,"column":6,"nodeType":"252","endLine":52,"endColumn":23,"suggestions":"300"},{"ruleId":"250","severity":1,"message":"301","line":151,"column":6,"nodeType":"252","endLine":151,"endColumn":8,"suggestions":"302"},{"ruleId":"285","severity":1,"message":"286","line":156,"column":9,"nodeType":"287","endLine":156,"endColumn":37},{"ruleId":"274","severity":1,"message":"275","line":238,"column":55,"nodeType":"245","endLine":238,"endColumn":70},{"ruleId":"276","severity":1,"message":"277","line":247,"column":43,"nodeType":"278","messageId":"279","endLine":247,"endColumn":45},{"ruleId":"274","severity":1,"message":"275","line":267,"column":31,"nodeType":"245","endLine":267,"endColumn":46},{"ruleId":"274","severity":1,"message":"275","line":275,"column":31,"nodeType":"245","endLine":275,"endColumn":46},{"ruleId":"250","severity":1,"message":"303","line":112,"column":6,"nodeType":"252","endLine":112,"endColumn":23,"suggestions":"304"},{"ruleId":"285","severity":1,"message":"286","line":117,"column":9,"nodeType":"287","endLine":117,"endColumn":37},{"ruleId":"305","severity":1,"message":"306","line":203,"column":23,"nodeType":"287","endLine":203,"endColumn":76},{"ruleId":"307","severity":1,"message":"308","line":58,"column":74,"nodeType":"309","messageId":"310","endLine":58,"endColumn":76},{"ruleId":"246","severity":1,"message":"311","line":7,"column":29,"nodeType":"248","messageId":"249","endLine":7,"endColumn":33},{"ruleId":"246","severity":1,"message":"312","line":20,"column":10,"nodeType":"248","messageId":"249","endLine":20,"endColumn":22},{"ruleId":"246","severity":1,"message":"313","line":20,"column":24,"nodeType":"248","messageId":"249","endLine":20,"endColumn":39},{"ruleId":"250","severity":1,"message":"314","line":83,"column":6,"nodeType":"252","endLine":83,"endColumn":23,"suggestions":"315"},{"ruleId":"243","severity":1,"message":"244","line":168,"column":25,"nodeType":"245","endLine":168,"endColumn":40},{"ruleId":"246","severity":1,"message":"316","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":16},{"ruleId":"246","severity":1,"message":"280","line":14,"column":7,"nodeType":"248","messageId":"249","endLine":14,"endColumn":14},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["317"],"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["318"],["319"],"Assign object to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'eduForm' and 'infoForm'. Either include them or remove the dependency array.",["320"],["318"],["319"],"React Hook useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.",["321"],"'form' is assigned a value but never used.","'confirm' is defined but never used.","React Hook useEffect has a missing dependency: 'getExampaper'. Either include it or remove the dependency array.",["322"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BASEURL' is assigned a value but never used.",["318"],["319"],"React Hook useEffect has a missing dependency: 'fetchContacts'. Either include it or remove the dependency array.",["323"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Badge' is defined but never used.",["318"],["319"],"React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["324"],"React Hook useEffect has a missing dependency: 'handleMessages'. Either include it or remove the dependency array.",["325"],["318"],["319"],["318"],["319"],"React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["326"],"React Hook useEffect has missing dependencies: 'form' and 'props.location.state'. Either include them or remove the dependency array.",["327"],"React Hook useEffect has a missing dependency: 'getAllBooks'. Either include it or remove the dependency array.",["328"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Form' is defined but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllTutions'. Either include it or remove the dependency array.",["329"],"'Avatar' is defined but never used.",{"desc":"330","fix":"331"},"no-global-assign","no-unsafe-negation",{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},"Update the dependencies array to be: [getUser]",{"range":"352","text":"353"},"Update the dependencies array to be: [eduForm, infoForm, userData]",{"range":"354","text":"355"},"Update the dependencies array to be: [getBooks, userData.iduser]",{"range":"356","text":"357"},"Update the dependencies array to be: [getExampaper, userData.iduser]",{"range":"358","text":"359"},"Update the dependencies array to be: [fetchContacts, userData.iduser]",{"range":"360","text":"361"},"Update the dependencies array to be: [friendDetails.roomId, getMessages]",{"range":"362","text":"363"},"Update the dependencies array to be: [handleMessages, socket]",{"range":"364","text":"365"},"Update the dependencies array to be: [getNotes, userData.iduser]",{"range":"366","text":"367"},"Update the dependencies array to be: [form, props.location.state]",{"range":"368","text":"369"},"Update the dependencies array to be: [getAllBooks, userData.iduser]",{"range":"370","text":"371"},"Update the dependencies array to be: [getAllTutions, userData.iduser]",{"range":"372","text":"373"},[1481,1483],"[getUser]",[5381,5391],"[eduForm, infoForm, userData]",[1109,1126],"[getBooks, userData.iduser]",[1473,1490],"[getExampaper, userData.iduser]",[1859,1876],"[fetchContacts, userData.iduser]",[1303,1325],"[friendDetails.roomId, getMessages]",[1968,1976],"[handleMessages, socket]",[1303,1320],"[getNotes, userData.iduser]",[3493,3495],"[form, props.location.state]",[3025,3042],"[getAllBooks, userData.iduser]",[2356,2373],"[getAllTutions, userData.iduser]"]