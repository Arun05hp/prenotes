[{"F:\\reactjs\\prenotes\\src\\App.js":"1","F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js":"2","F:\\reactjs\\prenotes\\src\\components\\Exam\\Upload\\ExamUpload.jsx":"3","F:\\reactjs\\prenotes\\src\\context\\createDataContext.js":"4","F:\\reactjs\\prenotes\\src\\services\\httpService.js":"5","F:\\reactjs\\prenotes\\src\\components\\Notification\\Notification.jsx":"6","F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx":"7","F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx":"8","F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx":"9","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx":"10","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Books\\Books.jsx":"11","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Exampaper\\Exampaper.jsx":"12","F:\\reactjs\\prenotes\\src\\components\\Notes\\Upload\\NotesUpload.jsx":"13","F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx":"14","F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx":"15","F:\\reactjs\\prenotes\\src\\context\\BooksContext.js":"16","F:\\reactjs\\prenotes\\src\\components\\Exam\\Search\\ExamSearch.jsx":"17","F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx":"18","F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx":"19","F:\\reactjs\\prenotes\\src\\context\\SocketProvider.js":"20","F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContainer.jsx":"21","F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContacts.jsx":"22","F:\\reactjs\\prenotes\\src\\index.js":"23","F:\\reactjs\\prenotes\\src\\context\\AuthContext.js":"24","F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js":"25","F:\\reactjs\\prenotes\\src\\components\\Books\\Sell\\SellBook.jsx":"26","F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx":"27","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Notes\\Notes.jsx":"28","F:\\reactjs\\prenotes\\src\\components\\Notes\\Search\\NotesSearch.jsx":"29","F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx":"30","F:\\reactjs\\prenotes\\src\\components\\Books\\Buy\\BuyBook.jsx":"31","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx":"32","F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx":"33","F:\\reactjs\\prenotes\\src\\context\\NotesContext.js":"34","F:\\reactjs\\prenotes\\src\\context\\ConversationsProvider.js":"35","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx":"36","F:\\reactjs\\prenotes\\src\\helper\\useSessionStorage.js":"37","F:\\reactjs\\prenotes\\src\\components\\Tuition\\Reg\\Reg.jsx":"38","F:\\reactjs\\prenotes\\src\\components\\Tuition\\Find\\View.jsx":"39","F:\\reactjs\\prenotes\\src\\components\\Profile\\Tutor\\Tutor.jsx":"40","F:\\reactjs\\prenotes\\src\\components\\Errors\\NotFound.jsx":"41","F:\\reactjs\\prenotes\\src\\components\\protectedRoute.jsx":"42"},{"size":957,"mtime":1609341324525,"results":"43","hashOfConfig":"44"},{"size":3403,"mtime":1609344401372,"results":"45","hashOfConfig":"44"},{"size":7796,"mtime":1609350259063,"results":"46","hashOfConfig":"44"},{"size":547,"mtime":1607870751521,"results":"47","hashOfConfig":"44"},{"size":563,"mtime":1609341957171,"results":"48","hashOfConfig":"44"},{"size":7575,"mtime":1609387067776,"results":"49","hashOfConfig":"44"},{"size":3643,"mtime":1609327153619,"results":"50","hashOfConfig":"44"},{"size":11186,"mtime":1609414642742,"results":"51","hashOfConfig":"44"},{"size":19758,"mtime":1609349634001,"results":"52","hashOfConfig":"44"},{"size":2308,"mtime":1609344351413,"results":"53","hashOfConfig":"44"},{"size":3493,"mtime":1609333895112,"results":"54","hashOfConfig":"44"},{"size":5548,"mtime":1609334433608,"results":"55","hashOfConfig":"44"},{"size":4210,"mtime":1609350164820,"results":"56","hashOfConfig":"44"},{"size":2011,"mtime":1608864968077,"results":"57","hashOfConfig":"44"},{"size":2969,"mtime":1609390015156,"results":"58","hashOfConfig":"44"},{"size":958,"mtime":1609333520329,"results":"59","hashOfConfig":"44"},{"size":8881,"mtime":1609336144930,"results":"60","hashOfConfig":"44"},{"size":4836,"mtime":1609401248940,"results":"61","hashOfConfig":"44"},{"size":4374,"mtime":1609410010327,"results":"62","hashOfConfig":"44"},{"size":624,"mtime":1609003053102,"results":"63","hashOfConfig":"44"},{"size":6728,"mtime":1609398267709,"results":"64","hashOfConfig":"44"},{"size":1618,"mtime":1609390075392,"results":"65","hashOfConfig":"44"},{"size":219,"mtime":1607270798331,"results":"66","hashOfConfig":"44"},{"size":2179,"mtime":1609349455929,"results":"67","hashOfConfig":"44"},{"size":1001,"mtime":1609316035328,"results":"68","hashOfConfig":"44"},{"size":5107,"mtime":1609350020213,"results":"69","hashOfConfig":"44"},{"size":2643,"mtime":1608223650918,"results":"70","hashOfConfig":"44"},{"size":3413,"mtime":1609333970388,"results":"71","hashOfConfig":"44"},{"size":9969,"mtime":1609410047370,"results":"72","hashOfConfig":"44"},{"size":2340,"mtime":1609400982868,"results":"73","hashOfConfig":"44"},{"size":7342,"mtime":1609336022376,"results":"74","hashOfConfig":"44"},{"size":15524,"mtime":1609401622382,"results":"75","hashOfConfig":"44"},{"size":268,"mtime":1609332212930,"results":"76","hashOfConfig":"44"},{"size":1484,"mtime":1609332960389,"results":"77","hashOfConfig":"44"},{"size":3166,"mtime":1609003836063,"results":"78","hashOfConfig":"44"},{"size":657,"mtime":1608811101478,"results":"79","hashOfConfig":"44"},{"size":628,"mtime":1609038541280,"results":"80","hashOfConfig":"44"},{"size":5494,"mtime":1609299561345,"results":"81","hashOfConfig":"44"},{"size":6298,"mtime":1609410047359,"results":"82","hashOfConfig":"44"},{"size":4152,"mtime":1609309232008,"results":"83","hashOfConfig":"44"},{"size":258,"mtime":1609336474226,"results":"84","hashOfConfig":"44"},{"size":686,"mtime":1609344403623,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"zyjns1",{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"89"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"89"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\reactjs\\prenotes\\src\\App.js",["192"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider as AuthProvider } from \"./context/AuthContext\";\nimport { Provider as NotesProvider } from \"./context/NotesContext\";\nimport { Provider as BooksProvider } from \"./context/BooksContext\";\nimport Navigation from \"./Navigation/Navigation\";\nimport Signup from \"./components/Auth/Signup\";\nimport \"./App.css\";\nimport NotFound from \"./components/Errors/NotFound\";\n\nconst App = () => {\n  return (\n    <BooksProvider>\n      <NotesProvider>\n        <AuthProvider>\n          <div className=\"app\">\n            <Router>\n              <Switch>\n                <Route exact path=\"/signup\" exact component={Signup} />\n                <Navigation />\n                <Route component={NotFound} />\n              </Switch>\n            </Router>\n          </div>\n        </AuthProvider>\n      </NotesProvider>\n    </BooksProvider>\n  );\n};\n\nexport default App;\n",["193","194"],"F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js",["195","196","197","198","199","200","201"],"import React, { useContext, useEffect } from \"react\";\r\nimport { message } from \"antd\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Context as AuthContext } from \"../context/AuthContext\";\r\nimport ProtectedRoute from \"../components/protectedRoute\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Home from \"../components/Home/Home\";\r\nimport Profile from \"../components/Profile/Profile\";\r\nimport Messanger from \"../components/Messanger/Messanger\";\r\nimport ExamSearch from \"../components/Exam/Search/ExamSearch.jsx\";\r\nimport ExamUpload from \"../components/Exam/Upload/ExamUpload.jsx\";\r\nimport NotesSearch from \"../components/Notes/Search/NotesSearch.jsx\";\r\nimport NotesUpload from \"../components/Notes/Upload/NotesUpload.jsx\";\r\nimport BuyBook from \"../components/Books/Buy/BuyBook\";\r\nimport SellBook from \"../components/Books/Sell/SellBook\";\r\nimport Notification from \"../components/Notification/Notification\";\r\nimport Reg from \"../components/Tuition/Reg/Reg\";\r\nimport View from \"../components/Tuition/Find/View\";\r\nimport NotFound from \"../components/Errors/NotFound\";\r\nconst Navigation = () => {\r\n  const { tryLocalSignin, getUserDetails, state } = useContext(AuthContext);\r\n\r\n  const getUser = async () => {\r\n    const id = await tryLocalSignin();\r\n    if (id) getUserDetails(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    message.config({\r\n      duration: 2,\r\n      maxCount: 1,\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Navbar />\r\n      <div className=\"app_container\">\r\n        <Switch>\r\n          <Route exact path=\"/\" exact component={Home} />\r\n          <ProtectedRoute exact path=\"/myprofile\" exact component={Profile} />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/myprofile/personalInfo\"\r\n            exact\r\n            component={Profile}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/myprofile/myuploads\"\r\n            exact\r\n            component={Profile}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/myprofile/changepassword\"\r\n            exact\r\n            component={Profile}\r\n          />\r\n          <ProtectedRoute exact path=\"/myprofile/tutor\" component={Profile} />\r\n          <ProtectedRoute exact path=\"/notification\" component={Notification} />\r\n          <ProtectedRoute exact path=\"/messages\" component={Messanger} />\r\n          <Route exact path=\"/notes/search\" component={NotesSearch} />\r\n\r\n          <ProtectedRoute exact path=\"/notes/upload\" component={NotesUpload} />\r\n          <ProtectedRoute exact path=\"/tuitions/create\" component={Reg} />\r\n          <ProtectedRoute exact path=\"/tuitions/search\" component={View} />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/exampapers/search\"\r\n            component={ExamSearch}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/exampapers/upload\"\r\n            component={ExamUpload}\r\n          />\r\n          <ProtectedRoute exact path=\"/books/buy\" component={BuyBook} />\r\n          <ProtectedRoute exact path=\"/books/sell\" component={SellBook} />\r\n          <ProtectedRoute exact path=\"/messages\" component={Messanger} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","F:\\reactjs\\prenotes\\src\\components\\Exam\\Upload\\ExamUpload.jsx",[],["202","203"],"F:\\reactjs\\prenotes\\src\\context\\createDataContext.js",["204"],"import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, defaultValue) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, defaultValue);\r\n    const boundActions = {};\r\n\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n  return { Context, Provider };\r\n};\r\n","F:\\reactjs\\prenotes\\src\\services\\httpService.js",["205"],"import axios from \"axios\";\r\nimport SecureStorage from \"../helper/SecureStorage\";\r\nconst BASE = process.env.REACT_APP_BASE_URL;\r\n\r\naxios.defaults.baseURL = BASE;\r\n\r\naxios.interceptors.request.use(\r\n  async (config) => {\r\n    const data = await SecureStorage.getItem(\"userData\");\r\n\r\n    if (data) {\r\n      config.headers.Authorization = `PreNotes__20 ${data.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","F:\\reactjs\\prenotes\\src\\components\\Notification\\Notification.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx",[],["206","207"],"F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx",["208"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  message,\r\n  Modal,\r\n  Select,\r\n  Upload,\r\n} from \"antd\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport http from \"../../services/httpService\";\r\nimport {\r\n  UserOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD/MM/YYYY\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst PersonalInfo = () => {\r\n  const { state, getUserDetails } = useContext(AuthContext);\r\n  const { userData, token } = state;\r\n  const [visibleInfo, setVisibleInfo] = useState(false);\r\n  const [visibleEdu, setVisibleEdu] = useState(false);\r\n  const [visiblePic, setVisiblePic] = useState(false);\r\n  const [imageData, setImageData] = useState({\r\n    loading: false,\r\n    imgUrl: null,\r\n  });\r\n  const [disabledAddr, setDisabledAddr] = useState(0);\r\n  const BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const actionUrl = BASEURL + \"user/profile/\" + userData.iduser;\r\n\r\n  const [infoForm] = Form.useForm();\r\n  const [eduForm] = Form.useForm();\r\n  const [basicForm] = Form.useForm();\r\n  const [edForm] = Form.useForm();\r\n\r\n  const handleCancel = () => {\r\n    setVisibleInfo(false);\r\n    setVisibleEdu(false);\r\n  };\r\n\r\n  const handleIsHosteler = (e) => {\r\n    setDisabledAddr(e.target.value);\r\n  };\r\n\r\n  const handleBasicInfo = () => {\r\n    basicForm.setFieldsValue({\r\n      name: userData.name,\r\n      dob: moment(userData.dob),\r\n      mno: userData.mno,\r\n      gender: userData.gender,\r\n      email: userData.email,\r\n    });\r\n    setVisibleInfo(true);\r\n  };\r\n  const handleEdu = () => {\r\n    edForm.setFieldsValue({\r\n      institute: userData.institute,\r\n      branch: userData.branch,\r\n      sem: userData.sem,\r\n      batch: [moment(userData.batchStart), moment(userData.batchEnd)],\r\n      regno: userData.regno,\r\n      hosteler: userData.hosteler,\r\n      hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n    });\r\n\r\n    setVisibleEdu(true);\r\n  };\r\n\r\n  const submitBasicInfo = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    http\r\n      .put(\"user/updateprofile/\" + userData.iduser, values)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        basicForm.resetFields();\r\n        setVisibleInfo(false);\r\n        message.success(\"Profile Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const submitEdu = (values) => {\r\n    console.log(\"Success:\", values);\r\n    let data = {\r\n      ...values,\r\n\r\n      batchStart: values.batch[0],\r\n      batchEnd: values.batch[1],\r\n      hostelAddress: values.hosteler ? values.hostelAddress : null,\r\n    };\r\n    delete data.batch;\r\n    http\r\n      .put(\"user/updateEdu/\" + userData.iduser, data)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        edForm.resetFields();\r\n        setVisibleEdu(false);\r\n        message.success(\"Education Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    setImageData({ loading: true, imgUrl: null });\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) =>\r\n        setImageData({ loading: false, imgUrl: imageUrl })\r\n      );\r\n      getUserDetails(userData.iduser);\r\n      message.success(\"Profile Image Updated Successfully\", 3);\r\n      setVisiblePic(false);\r\n    }\r\n    if (info.file.status === \"error\") {\r\n      message.error(\"Failed\", 3);\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {imageData.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      infoForm.setFieldsValue({\r\n        name: userData.name,\r\n        dob: moment(userData.dob).format(dateFormat),\r\n        mno: Number(userData.mno),\r\n        gender: userData.gender,\r\n        email: userData.email,\r\n      });\r\n      setDisabledAddr(userData.hosteler);\r\n      eduForm.setFieldsValue({\r\n        institute: userData.institute,\r\n        branch: userData.branch,\r\n        sem: Number(userData.sem),\r\n        batch: `${moment(userData.batchStart).format(\"YYYY\")} - ${moment(\r\n          userData.batchEnd\r\n        ).format(\"YYYY\")}`,\r\n        regno: userData.regno,\r\n        hosteler: userData.hosteler ? \"Yes\" : \"No\",\r\n        hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n      });\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"innerWrapper\">\r\n        <div className=\"avatar_wrapper\">\r\n          <Avatar\r\n            size={{ xs: 64, sm: 64, md: 64, lg: 64, xl: 100, xxl: 100 }}\r\n            src={\r\n              userData.profileImg != null ? BASEURL + userData.profileImg : null\r\n            }\r\n            icon={<UserOutlined />}\r\n            key={userData.profileImg}\r\n          />\r\n          <Button className=\"btn\" onClick={() => setVisiblePic(true)}>\r\n            Change Photo\r\n          </Button>\r\n        </div>\r\n        <div className=\"heading_wrap\">\r\n          <h3>Basic Information</h3>\r\n          <div className=\"circle\" onClick={handleBasicInfo}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n\r\n        <Form form={infoForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Name\" name=\"name\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"DOB\" name=\"dob\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Mobile Number\" name=\"mno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Gender\" name=\"gender\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Email\" name=\"email\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"heading_wrap\">\r\n          <h3>Education</h3>\r\n          <div className=\"circle\" onClick={handleEdu}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n        <Form form={eduForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Institution\" name=\"institute\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Branch\" name=\"branch\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Semester\" name=\"sem\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label={\"Batch\"} name=\"batch\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Registration No.\" name=\"regno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item name=\"hosteler\" label=\"Hosteler\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <Modal\r\n        visible={visibleInfo}\r\n        title=\"Basic Information\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={basicForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={basicForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitBasicInfo}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Please input your name!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"DOB\"\r\n                name=\"dob\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <DatePicker\r\n                  allowClear={false}\r\n                  style={{ width: \"100%\" }}\r\n                  format={dateFormat}\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Mobile Number\"\r\n                name=\"mno\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your mobile number!\",\r\n                  },\r\n                  {\r\n                    minLength: 10,\r\n                    maxLength: 10,\r\n                    pattern: \"^[0-9]{10}$\",\r\n                    message: \"Must be 10 digits\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"tel\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                >\r\n                  <Radio.Button value=\"Male\">Male</Radio.Button>\r\n                  <Radio.Button value=\"Female\">Female</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your username!\",\r\n                  },\r\n                  { type: \"email\", message: \"Please input valid email!\" },\r\n                ]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        visible={visibleEdu}\r\n        title=\"Education\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={edForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={edForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitEdu}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Institution\"\r\n                name=\"institute\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select College\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                  {/* <Option value={3}>Communicated</Option>\r\n                      <Option value={4}>Identified</Option> */}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Branch\"\r\n                name=\"branch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select Branch\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Semester\"\r\n                name=\"sem\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Required!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select size=\"large\">\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label={\"Batch\"}\r\n                name=\"batch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <RangePicker\r\n                  style={{ width: \"100%\" }}\r\n                  picker=\"year\"\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Registration No.\"\r\n                name=\"regno\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hosteler\"\r\n                label=\"Hosteler\"\r\n                rules={[{ required: true, message: \"Please pick an item!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                  onChange={handleIsHosteler}\r\n                >\r\n                  <Radio.Button value={1}>Yes</Radio.Button>\r\n                  <Radio.Button value={0}>No</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hostelAddress\"\r\n                label=\"Hostel Address\"\r\n                rules={[{ required: disabledAddr, message: \"Required!\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  maxLength={250}\r\n                  rows={2}\r\n                  disabled={!disabledAddr}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={visiblePic}\r\n        title=\"Change Profile Image\"\r\n        onCancel={() => setVisiblePic(false)}\r\n        footer={null}\r\n        style={{ textAlign: \"center\", maxWidth: \"300px\" }}\r\n      >\r\n        <Upload\r\n          name=\"photo\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={actionUrl}\r\n          headers={{ Authorization: `PreNotes__20 ${token}` }}\r\n          beforeUpload={beforeUpload}\r\n          onChange={handleChange}\r\n        >\r\n          {imageData.imgUrl ? (\r\n            <img\r\n              src={imageData.imgUrl}\r\n              alt=\"avatar\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            uploadButton\r\n          )}\r\n        </Upload>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n",["209","210"],"F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Books\\Books.jsx",["211"],"import { DeleteOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Image,\r\n  Popconfirm,\r\n  Row,\r\n  message,\r\n  Skeleton,\r\n} from \"antd\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Context as AuthContext } from \"../../../../context/AuthContext\";\r\nimport { Context as BookContext } from \"../../../../context/BooksContext\";\r\nimport http from \"../../../../services/httpService\";\r\nconst Books = () => {\r\n  let BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const {\r\n    state: { userData },\r\n  } = useContext(AuthContext);\r\n\r\n  const {\r\n    state: { booksData, isLoading },\r\n    getBooks,\r\n  } = useContext(BookContext);\r\n\r\n  const deleteBook = (id) => {\r\n    http\r\n      .delete(\"upload/delbook/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Deleted Successfully\", 3);\r\n        getBooks(userData.iduser);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) getBooks(userData.iduser);\r\n    else return;\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[16, 16]}>\r\n        {isLoading ? (\r\n          <Col md={12} xs={24}>\r\n            <Card className=\"itemWrapper\">\r\n              <Row gutter={8}>\r\n                <Col md={6} xs={6}>\r\n                  <Skeleton.Image active />\r\n                </Col>\r\n                <Col md={18} xs={18}>\r\n                  <div style={{ padding: \"0 10px\" }}>\r\n                    <Skeleton active paragraph={true} />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        ) : booksData.length > 0 ? (\r\n          booksData.map((item) => {\r\n            return (\r\n              <Col md={12} xs={24}>\r\n                <Card className=\"itemWrapper\">\r\n                  <Row gutter={8}>\r\n                    <Col md={6} xs={6}>\r\n                      <Avatar\r\n                        shape=\"square\"\r\n                        src={<Image src={BASEURL + item.fileLink} />}\r\n                      />\r\n                    </Col>\r\n                    <Col md={14} xs={18}>\r\n                      <h3>{item.bookName}</h3>\r\n                      <p>\r\n                        {item.authorName} by {item.publisherName}\r\n                      </p>\r\n                      <h3>Rs {item.price}</h3>\r\n                    </Col>\r\n                    <Col md={4} xs={24}>\r\n                      <div className=\"btnWrapper\">\r\n                        <Popconfirm\r\n                          placement=\"topRight\"\r\n                          title=\"\r\n                Are you sure you want to delete?\"\r\n                          onConfirm={() => deleteBook(item.idbook)}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                        >\r\n                          <Button\r\n                            danger\r\n                            type=\"link\"\r\n                            shape=\"circle\"\r\n                            icon={<DeleteOutlined />}\r\n                          />\r\n                        </Popconfirm>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })\r\n        ) : (\r\n          <Col md={12} sm={12}>\r\n            <Card>No Records</Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Exampaper\\Exampaper.jsx",["212","213","214","215","216","217"],"import { UploadOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  message,\r\n  Modal,\r\n  Row,\r\n  Upload,\r\n  Skeleton,\r\n} from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../../../context/AuthContext\";\r\nimport { Context as NotesContext } from \"../../../../context/NotesContext\";\r\nimport http from \"../../../../services/httpService\";\r\nimport \"./exampaper.css\";\r\nfunction getBranch(id) {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Mechanical Engg.\";\r\n    case 2:\r\n      return \"Computer Sci. Engg.\";\r\n    case 3:\r\n      return \"Electrical Engg.\";\r\n    case 4:\r\n      return \"Civil Engg.\";\r\n    case 5:\r\n      return \"Instrumentation Engg.\";\r\n    case 6:\r\n      return \"Chemical Engg.\";\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst Exampaper = () => {\r\n  let BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const {\r\n    state: { userData },\r\n  } = useContext(AuthContext);\r\n\r\n  const {\r\n    state: { examData, isLoading },\r\n    getExampaper,\r\n  } = useContext(NotesContext);\r\n\r\n  const [form] = Form.useForm();\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [examId, setExamId] = useState(-1);\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  function confirm() {\r\n    console.log(\"Clicked on Yes.\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) getExampaper(userData.iduser);\r\n    else return;\r\n  }, [userData.iduser]);\r\n\r\n  const handleUpload = (id) => {\r\n    setExamId(id);\r\n    setVisibleModal(true);\r\n  };\r\n\r\n  const uploadSol = () => {\r\n    const formData = new FormData();\r\n    fileList.forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    http\r\n      .post(\"exam/uploadsolution/\" + examId, formData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setFileList([]);\r\n        setVisibleModal(false);\r\n        message.success(\" Uploaded Successfully\", 3);\r\n        getExampaper(userData.iduser);\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n  function beforeUpload(file) {\r\n    if (\r\n      file.type === \"application/pdf\" ||\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\"\r\n    ) {\r\n      setFileList([file]);\r\n    } else {\r\n      message.error(\"Only pdf, jpeg, png\");\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function onRemove(file) {\r\n    setFileList([]);\r\n  }\r\n  return (\r\n    <div>\r\n      <Row gutter={[16, 16]}>\r\n        {isLoading ? (\r\n          <Col md={12} xs={24}>\r\n            <div className=\"innerWrapper\">\r\n              <Card className=\"itemWrapper\">\r\n                <Skeleton active />\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        ) : examData.length > 0 ? (\r\n          examData.map((item) => {\r\n            return (\r\n              <Col key={item.idnotes} md={12} xs={24}>\r\n                <div className=\"innerWrapper exam\">\r\n                  <Card className=\"itemWrapper\">\r\n                    <Row gutter={8}>\r\n                      <Col md={24} xs={24}>\r\n                        <h3>{item.subject}</h3>\r\n                        <p>{getBranch(item.branch)}</p>\r\n                      </Col>\r\n                      <Col md={12} sm={12} xs={24}>\r\n                        <div className=\"btn_wrapper\">\r\n                          <a href={BASEURL + item.quefileLink} target=\"_blank\">\r\n                            <Button> View Exam Paper</Button>\r\n                          </a>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={12} sm={12} xs={24}>\r\n                        <div className=\"btn_wrapper\">\r\n                          {item.solfileLink != null &&\r\n                          item.solfileLink != \"\" ? (\r\n                            <a\r\n                              href={BASEURL + item.solfileLink}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <Button> View Soultion</Button>\r\n                            </a>\r\n                          ) : (\r\n                            <Button onClick={() => handleUpload(item.idexam)}>\r\n                              Upload Soultion\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })\r\n        ) : (\r\n          <Col md={12} xs={24}>\r\n            <Card>No Records</Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      <Modal\r\n        visible={visibleModal}\r\n        title=\"Upload Solution\"\r\n        onCancel={() => setVisibleModal(false)}\r\n        footer={[\r\n          <Button className=\"btn-primary\" onClick={uploadSol}>\r\n            Upload\r\n          </Button>,\r\n        ]}\r\n        style={{ textAlign: \"center\", maxWidth: \"300px\" }}\r\n      >\r\n        <Dragger\r\n          name=\"file\"\r\n          multiple={false}\r\n          fileList={fileList}\r\n          beforeUpload={beforeUpload}\r\n          onRemove={onRemove}\r\n        >\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <UploadOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or Drag file here</p>\r\n        </Dragger>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exampaper;\r\n","F:\\reactjs\\prenotes\\src\\components\\Notes\\Upload\\NotesUpload.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx",["218"],"import { Col, Row, message } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketProvider } from \"../../context/SocketProvider.js\";\r\nimport ChatContacts from \"./ChatContacts.jsx\";\r\nimport ChatContainer from \"./ChatContainer.jsx\";\r\nimport http from \"../../services/httpService\";\r\nimport useSessionStorage from \"../../helper/useSessionStorage\";\r\nimport mailImg from \"../../assets/images/mail.png\";\r\nimport \"./messanger.css\";\r\n\r\nconst Messanger = () => {\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [id, setId] = useState(-1);\r\n  const [contactLists, setContactsList] = useSessionStorage(\"contacts\", []);\r\n  const [conLoading, setConLoading] = useState(false);\r\n  const [friendDetails, setFriendDetails] = useState({\r\n    id: null,\r\n    userDetails: { name: null, profileImg: null },\r\n    roomId: null,\r\n  });\r\n\r\n  const fetchContacts = (id) => {\r\n    setConLoading(true);\r\n    http\r\n      .get(\"contacts/contacts/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        if (res.contactsData.length > 0) {\r\n          setId(res.contactsData[0].uuid);\r\n          if (res.contactsData[0].contacts) {\r\n            setContactsList(res.contactsData[0].contacts);\r\n          }\r\n        }\r\n        setTimeout(() => {\r\n          setConLoading(false);\r\n        }, 3000);\r\n      })\r\n      .catch((err) => {\r\n        setConLoading(false);\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) fetchContacts(userData.iduser);\r\n    console.log(\"m id\", userData.iduser);\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <SocketProvider id={id}>\r\n      <div className=\"msg_wrapper\">\r\n        <Row gutter={[16, 16]}>\r\n          <Col md={6} xs={24}>\r\n            <ChatContacts\r\n              contactLists={contactLists}\r\n              setFriendDetails={setFriendDetails}\r\n              conLoading={conLoading}\r\n              selectedRoom={friendDetails.roomId}\r\n            />\r\n          </Col>\r\n          <Col md={18} xs={24}>\r\n            {friendDetails.id ? (\r\n              <ChatContainer id={id} friendDetails={friendDetails} />\r\n            ) : (\r\n              <div className=\"nomessages\">\r\n                <div className=\"nomsg_body\">\r\n                  <img className=\"mail\" src={mailImg} alt=\"Mail Png\" />\r\n                  <p className=\"title\">No message yet.</p>\r\n                  <p className=\"subtitle\">\r\n                    Once you connect, your messages will be displayed here.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </SocketProvider>\r\n  );\r\n};\r\n\r\nexport default Messanger;\r\n","F:\\reactjs\\prenotes\\src\\context\\BooksContext.js",[],["219","220"],"F:\\reactjs\\prenotes\\src\\components\\Exam\\Search\\ExamSearch.jsx",["221","222","223","224"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  Select,\r\n  Upload,\r\n} from \"antd\";\r\n\r\nimport bg from \"../../../assets/bg/books.png\";\r\n\r\nimport http from \"../../../services/httpService\";\r\nimport \"./examsearch.css\";\r\nimport {\r\n  SearchOutlined,\r\n  FileTextOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nfunction getBranch(id) {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Mechanical Engg.\";\r\n    case 2:\r\n      return \"Computer Sci. Engg.\";\r\n    case 3:\r\n      return \"Electrical Engg.\";\r\n    case 4:\r\n      return \"Civil Engg.\";\r\n    case 5:\r\n      return \"Instrumentation Engg.\";\r\n    case 6:\r\n      return \"Chemical Engg.\";\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\nconst ExamSearch = () => {\r\n  const BASEURL = process.env.REACT_APP_BASE_URL;\r\n\r\n  const [examPaperData, setExamPaperData] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [examId, setExamId] = useState(-1);\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const onFinish = (val) => {\r\n    http\r\n      .get(\"exam/searchexampaper\", {\r\n        params: {\r\n          ...val,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setExamPaperData(res.examPaperData);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  const getAllExamPaper = () => {\r\n    http\r\n      .get(\"exam/allexampaper\")\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setExamPaperData(res.examPaperData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllExamPaper();\r\n    return () => {\r\n      setExamPaperData([]);\r\n    };\r\n  }, []);\r\n\r\n  const handleUpload = (id) => {\r\n    setExamId(id);\r\n    setVisibleModal(true);\r\n  };\r\n\r\n  const uploadSol = () => {\r\n    const formData = new FormData();\r\n    fileList.forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    http\r\n      .post(\"exam/uploadsolution/\" + examId, formData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setFileList([]);\r\n        setVisibleModal(false);\r\n        message.success(\" Uploaded Successfully\", 3);\r\n        getAllExamPaper();\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  function beforeUpload(file) {\r\n    if (\r\n      file.type === \"application/pdf\" ||\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\"\r\n    ) {\r\n      setFileList([file]);\r\n    } else {\r\n      message.error(\"Only pdf, jpeg, png\");\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function onRemove(file) {\r\n    setFileList([]);\r\n  }\r\n  return (\r\n    <div className=\"ExamSearch_wrapper\">\r\n      <header>\r\n        <img src={bg} alt=\"image\" />\r\n        <div className=\"input_wrapper\">\r\n          <div className=\"title\">\r\n            <h3 className=\"titletext\">Search.Study.Share</h3>\r\n            <p className=\"subtitle\">\r\n              Step up your preperation with previous question papers.\r\n            </p>\r\n          </div>\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            initialValues={{ string: \"\" }}\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Row gutter={[16, 16]}>\r\n              <Col md={13} sm={24} xs={24}>\r\n                <Form.Item name=\"string\">\r\n                  <Input\r\n                    placeholder=\"What are you looking for...\"\r\n                    autoComplete=\"off\"\r\n                    size=\"large\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col md={7} sm={12} xs={12}>\r\n                <Form.Item name=\"branch\">\r\n                  <Select\r\n                    showSearch\r\n                    size=\"large\"\r\n                    placeholder=\"Select Branch\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                      optionA.children\r\n                        .toLowerCase()\r\n                        .localeCompare(optionB.children.toLowerCase())\r\n                    }\r\n                  >\r\n                    <Option value={1}>Mechanical Engineering</Option>\r\n                    <Option value={2}>Computer Science Engineering</Option>\r\n                    <Option value={3}>Electrical Engineering</Option>\r\n                    <Option value={4}>Civil Engineering</Option>\r\n                    <Option value={5}>Instrumentation Engineering</Option>\r\n                    <Option value={6}>Chemical Engineering</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col md={4} sm={12} xs={12}>\r\n                <Form.Item>\r\n                  <div className=\"btn_wrapper\">\r\n                    <Button htmlType=\"submit\" size=\"large\">\r\n                      <SearchOutlined />\r\n                    </Button>\r\n                  </div>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </header>\r\n      <main className=\"ExamSearch_body\">\r\n        <Row gutter={[16, 16]}>\r\n          {examPaperData.length > 0\r\n            ? examPaperData.map((item) => {\r\n                return (\r\n                  <Col key={item.idnotes} md={12} xs={24}>\r\n                    <div className=\"innerWrapper\">\r\n                      <Card className=\"itemWrapper\">\r\n                        <Row gutter={8}>\r\n                          <Col md={6} xs={6}>\r\n                            <div className=\"file-icon\">\r\n                              <FileTextOutlined />\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={18} xs={18}>\r\n                            <h3>{item.subject}</h3>\r\n                            <p>{getBranch(item.branch)}</p>\r\n                          </Col>\r\n                          <Col md={12} sm={12} xs={24}>\r\n                            <div className=\"btn_wrapper\">\r\n                              <a\r\n                                href={BASEURL + item.quefileLink}\r\n                                target=\"_blank\"\r\n                              >\r\n                                <Button> View Exam Paper</Button>\r\n                              </a>\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12} xs={24}>\r\n                            <div className=\"btn_wrapper\">\r\n                              {item.solfileLink != null &&\r\n                              item.solfileLink != \"\" ? (\r\n                                <a\r\n                                  href={BASEURL + item.solfileLink}\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <Button> View Soultion</Button>\r\n                                </a>\r\n                              ) : (\r\n                                <Button\r\n                                  onClick={() => handleUpload(item.idexam)}\r\n                                >\r\n                                  Upload Soultion\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    </div>\r\n                  </Col>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </Row>\r\n      </main>\r\n      <Modal\r\n        visible={visibleModal}\r\n        title=\"Upload Solution\"\r\n        onCancel={() => setVisibleModal(false)}\r\n        footer={[\r\n          <Button className=\"btn-primary\" onClick={uploadSol}>\r\n            Upload\r\n          </Button>,\r\n        ]}\r\n        style={{ textAlign: \"center\", maxWidth: \"300px\" }}\r\n      >\r\n        <Dragger\r\n          name=\"file\"\r\n          multiple={false}\r\n          fileList={fileList}\r\n          beforeUpload={beforeUpload}\r\n          onRemove={onRemove}\r\n        >\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <UploadOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or Drag file here</p>\r\n        </Dragger>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamSearch;\r\n",["225","226"],"F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx",["227"],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx",[],"F:\\reactjs\\prenotes\\src\\context\\SocketProvider.js",[],["228","229"],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContainer.jsx",["230","231"],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContacts.jsx",[],"F:\\reactjs\\prenotes\\src\\index.js",[],["232","233"],"F:\\reactjs\\prenotes\\src\\context\\AuthContext.js",[],"F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js",[],"F:\\reactjs\\prenotes\\src\\components\\Books\\Sell\\SellBook.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Notes\\Notes.jsx",["234"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Button, Card, Col, Popconfirm, Row, message, Skeleton } from \"antd\";\r\nimport { Context as AuthContext } from \"../../../../context/AuthContext\";\r\nimport { Context as NotesContext } from \"../../../../context/NotesContext\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport http from \"../../../../services/httpService\";\r\nfunction getCategory(id) {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Physics\";\r\n    case 2:\r\n      return \"Chemistry\";\r\n    case 3:\r\n      return \"Mathematics\";\r\n    case 4:\r\n      return \"Computer\";\r\n    case 5:\r\n      return \"Mechanical\";\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst Notes = () => {\r\n  const {\r\n    state: { userData },\r\n  } = useContext(AuthContext);\r\n  const {\r\n    state: { notesData, isLoading },\r\n    getNotes,\r\n  } = useContext(NotesContext);\r\n\r\n  const deleteNotes = (id) => {\r\n    http\r\n      .delete(\"upload/delNotes/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Deleted Successfully\", 3);\r\n        getNotes(userData.iduser);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) getNotes(userData.iduser);\r\n    else return;\r\n  }, [userData.iduser]);\r\n  return (\r\n    <div>\r\n      <Row gutter={[16, 16]}>\r\n        {isLoading ? (\r\n          <>\r\n            <Col md={12} xs={24}>\r\n              <Card className=\"itemWrapper\">\r\n                <Skeleton active rows={1} paragraph={false} />\r\n              </Card>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Card className=\"itemWrapper\">\r\n                <Skeleton active rows={1} paragraph={false} />\r\n              </Card>\r\n            </Col>\r\n          </>\r\n        ) : notesData.length > 0 ? (\r\n          notesData.map((item) => {\r\n            return (\r\n              <Col key={item.idnotes} md={12} xs={24}>\r\n                <div className=\"innerWrapper\">\r\n                  <Card className=\"itemWrapper\">\r\n                    <Row gutter={8}>\r\n                      <Col md={18} xs={18}>\r\n                        <h3>{item.topic}</h3>\r\n                        <p>{getCategory(item.category)}</p>\r\n                      </Col>\r\n                      <Col md={6} xs={6}>\r\n                        <div className=\"btnWrapper\">\r\n                          <Popconfirm\r\n                            placement=\"topRight\"\r\n                            title=\"\r\n                        Are you sure you want to delete?\"\r\n                            onConfirm={() => deleteNotes(item.idnotes)}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                          >\r\n                            <Button\r\n                              danger\r\n                              type=\"link\"\r\n                              shape=\"circle\"\r\n                              icon={<DeleteOutlined />}\r\n                            />\r\n                          </Popconfirm>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })\r\n        ) : (\r\n          <Col md={12} xs={24}>\r\n            <Card>No Records</Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","F:\\reactjs\\prenotes\\src\\components\\Notes\\Search\\NotesSearch.jsx",["235","236","237","238","239"],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Books\\Buy\\BuyBook.jsx",["240","241","242"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Result,\r\n  Skeleton,\r\n} from \"antd\";\r\n\r\nimport { Context as AuthContext } from \"../../../context/AuthContext\";\r\nimport http from \"../../../services/httpService\";\r\nimport bg from \"../../../assets/bg/books.png\";\r\n\r\nimport \"../../Notes/Search/notessearch.css\";\r\nimport \"./buybook.css\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nconst BuyBook = () => {\r\n  let BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [booksData, setBooksData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const onFinish = (val) => {\r\n    setIsLoading(true);\r\n    let data = {\r\n      id: userData.iduser,\r\n      ...val,\r\n    };\r\n    http\r\n      .post(\"upload/searchBooks\", data)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        let filterData = res.booksData.filter(\r\n          (item) => item.institute === userData.institute\r\n        );\r\n        setBooksData(filterData);\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        if (err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  const getAllBooks = (id) => {\r\n    setIsLoading(true);\r\n    http\r\n      .get(\"upload/allBooks/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        let filterData = res.booksData.filter(\r\n          (item) => item.institute === userData.institute\r\n        );\r\n        setBooksData(filterData);\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  const handleReq = (data) => {\r\n    if (!userData.iduser) {\r\n      return;\r\n    }\r\n    let formData = {\r\n      senderId: userData.iduser,\r\n      senderName: userData.name,\r\n      receiverId: data.iduser,\r\n      receiverStatus: 0,\r\n      forid: data.idbook,\r\n      title: data.bookName,\r\n      query: null,\r\n      for: 1,\r\n      status: 0,\r\n    };\r\n    http\r\n      .post(\"notification/notifi\", formData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Your request was sent successfully\");\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) getAllBooks(userData.iduser);\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <div className=\"notesSearch_wrapper\">\r\n      <header>\r\n        <img src={bg} alt=\"image\" />\r\n        <div className=\"input_wrapper\">\r\n          <div className=\"title\">\r\n            <h3 className=\"titletext\">Search.Study.Share</h3>\r\n            <p className=\"subtitle\">\r\n              Find Books of your interest within the campus.\r\n            </p>\r\n          </div>\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            initialValues={{ topic: \"\" }}\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Row gutter={[16, 16]}>\r\n              <Col md={21} sm={18} xs={18}>\r\n                <Form.Item name=\"text\">\r\n                  <Input\r\n                    placeholder=\"Enter Title, Author\"\r\n                    autoComplete=\"off\"\r\n                    size=\"large\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col md={3} sm={6} xs={6}>\r\n                <Form.Item>\r\n                  <div className=\"btn_wrapper\">\r\n                    <Button htmlType=\"submit\" size=\"large\">\r\n                      <SearchOutlined />\r\n                    </Button>\r\n                  </div>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </header>\r\n      <main className=\"booksSearch_body\">\r\n        <Row gutter={[16, 16]}>\r\n          {isLoading ? (\r\n            <>\r\n              <Col md={8} xs={24}>\r\n                <Card className=\"itemWrapper\">\r\n                  <div className=\"book_wrapper\">\r\n                    <Skeleton.Image active />\r\n\r\n                    <div className=\"book_body\" style={{ flex: 1 }}>\r\n                      <Skeleton active paragraph={true} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"btn-wrapper\">\r\n                    <Skeleton.Input\r\n                      style={{ width: \"100% !important\" }}\r\n                      active\r\n                      size=\"large\"\r\n                    />\r\n                  </div>\r\n                </Card>\r\n              </Col>\r\n              <Col md={8} xs={24}>\r\n                <Card className=\"itemWrapper\">\r\n                  <div className=\"book_wrapper\">\r\n                    <Skeleton.Image active />\r\n\r\n                    <div className=\"book_body\" style={{ flex: 1 }}>\r\n                      <Skeleton active paragraph={true} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"btn-wrapper\">\r\n                    <Skeleton.Input\r\n                      style={{ width: \"100% !important\" }}\r\n                      active\r\n                      size=\"large\"\r\n                    />\r\n                  </div>\r\n                </Card>\r\n              </Col>\r\n            </>\r\n          ) : booksData.length > 0 ? (\r\n            booksData.map((item) => {\r\n              return (\r\n                <Col md={8} xs={24}>\r\n                  <Card className=\"itemWrapper\">\r\n                    <div className=\"book_wrapper\">\r\n                      <img className=\"img\" src={BASEURL + item.fileLink} />\r\n\r\n                      <div className=\"book_body\">\r\n                        <div className=\"dec\">\r\n                          <p className=\"title\">{item.bookName}</p>\r\n                          <p className=\"subtitle\">{item.authorName}</p>\r\n                          <p className=\"subtitle\"> {item.publisherName} </p>\r\n                        </div>\r\n\r\n                        <p className=\"price\">₹ {item.price}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"btn-wrapper\">\r\n                      <Button onClick={() => handleReq(item)}>\r\n                        Send Request\r\n                      </Button>\r\n                    </div>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })\r\n          ) : (\r\n            <Col md={24} xs={24}>\r\n              <Result\r\n                status=\"404\"\r\n                title=\"No Results Found\"\r\n                subTitle={null}\r\n                // extra={<Button type=\"primary\">Back Home</Button>}\r\n              />\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyBook;\r\n","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx",[],"F:\\reactjs\\prenotes\\src\\context\\NotesContext.js",[],"F:\\reactjs\\prenotes\\src\\context\\ConversationsProvider.js",["243"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx",[],"F:\\reactjs\\prenotes\\src\\helper\\useSessionStorage.js",[],["244","245"],"F:\\reactjs\\prenotes\\src\\components\\Tuition\\Reg\\Reg.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Tuition\\Find\\View.jsx",["246","247","248","249"],"import {\r\n  EnvironmentOutlined,\r\n  FieldTimeOutlined,\r\n\r\n  InfoCircleFilled, MessageFilled\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Card, Col, message, Popover, Row } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../../context/AuthContext\";\r\nimport http from \"../../../services/httpService\";\r\nimport \"./view.css\";\r\n\r\nconst View = (props) => {\r\n  console.log(props);\r\n  let BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [tutionData, setTutionData] = useState([]);\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const getAllTutions = (id) => {\r\n    http\r\n      .get(\"tutor/alltutors/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        let filterData = res.tutorData.filter(\r\n          (item) =>\r\n            item.institute === userData.institute &&\r\n            (item.for === userData.gender || item.for === \"All\")\r\n        );\r\n        setTutionData(filterData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  const handleQuery = (val) => {\r\n    console.log(val);\r\n    if (!userData.iduser) {\r\n      return;\r\n    }\r\n\r\n    let formData = {\r\n      senderId: userData.iduser,\r\n      senderName: userData.name,\r\n      receiverId: val.iduser,\r\n      receiverStatus: 0,\r\n      forid: val.id,\r\n      title: val.subject + \"Tution\",\r\n      query: \"Can we connect\",\r\n      for: 2,\r\n      status: 0,\r\n    };\r\n    http\r\n      .post(\"notification/notifi\", formData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Your request was sent successfully\");\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) getAllTutions(userData.iduser);\r\n\r\n    return () => {\r\n      setTutionData([]);\r\n    };\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <div className=\"tutorview_wrapper\">\r\n      <main className=\"tutorview_body\">\r\n        <h3>Ongoing Tuitions details</h3>\r\n        <Row gutter={[16, 32]}>\r\n          {tutionData.length > 0\r\n            ? tutionData.map((item) => (\r\n                <Col md={8} sm={12} xs={24}>\r\n                  <Card>\r\n                    <div className=\"box\">\r\n                      <div className=\"userInfo\">\r\n                        <div className=\"userDetails\">\r\n                          <Avatar\r\n                            size={{\r\n                              xs: 40,\r\n                              sm: 50,\r\n                              md: 50,\r\n                              lg: 54,\r\n                              xl: 54,\r\n                              xxl: 54,\r\n                            }}\r\n                            style={{\r\n                              color: \"#f56a00\",\r\n                              backgroundColor: \"#fde3cf\",\r\n                            }}\r\n                            src={\r\n                              item.profileImg != null\r\n                                ? BASEURL + item.profileImg\r\n                                : null\r\n                            }\r\n                          >\r\n                            {item.tutorName ? item.tutorName.charAt(0) : \"\"}\r\n                          </Avatar>\r\n                          <div className=\"name\">\r\n                            <p className=\"title\"> {item.tutorName}</p>\r\n                            <div className=\"subtitle\">{item.subject}</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"time\">\r\n                          <p>\r\n                            <FieldTimeOutlined />\r\n                            {new Date(item.timing).toLocaleTimeString(\"en-US\")}\r\n                          </p>\r\n                          <p className=\"day\">Every {item.day}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"price_wrapper\">\r\n                        <div className=\"price\">\r\n                          <p className=\"title\">\r\n                            ₹ {item.fees}{\" \"}\r\n                            <span className=\"subtitle\">/month</span>\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"loc\">\r\n                          <p>\r\n                            <EnvironmentOutlined /> {item.loc}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"btn_wrapper\">\r\n                      <MessageFilled onClick={() => handleQuery(item)} />{\" \"}\r\n                      <Popover\r\n                        overlayClassName=\"popinfo\"\r\n                        placement=\"top\"\r\n                        title=\"Contact Details\"\r\n                        trigger={[\"click\", \"hover\"]}\r\n                        content={\r\n                          <>\r\n                            <p className=\"title\">\r\n                              Email:{\" \"}\r\n                              <span className=\"subtitle\">{item.email}</span>\r\n                            </p>\r\n                            {item.contact ? (\r\n                              <p className=\"title\">\r\n                                Contact No.:{\" \"}\r\n                                <span className=\"subtitle\">{item.contact}</span>\r\n                              </p>\r\n                            ) : null}\r\n                          </>\r\n                        }\r\n                        trigger=\"click\"\r\n                      >\r\n                        <InfoCircleFilled />\r\n                      </Popover>\r\n                    </div>\r\n                  </Card>\r\n                </Col>\r\n              ))\r\n            : null}\r\n        </Row>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","F:\\reactjs\\prenotes\\src\\components\\Profile\\Tutor\\Tutor.jsx",["250","251"],"import {\r\n  EnvironmentOutlined,\r\n  FieldTimeOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Card, Col, message, Popconfirm, Row } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../../context/AuthContext\";\r\nimport http from \"../../../services/httpService\";\r\nimport \"./tutor.css\";\r\n\r\nconst Tutor = (props) => {\r\n  console.log(props);\r\n  let BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [tutionData, setTutionData] = useState([]);\r\n\r\n  const getAllTutions = (id) => {\r\n    http\r\n      .get(\"tutor/tutor/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setTutionData(res.tutorData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    http\r\n      .delete(\"tutor/deltutor/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Deleted Successfully\", 3);\r\n        getAllTutions(userData.iduser);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) getAllTutions(userData.iduser);\r\n\r\n    return () => {\r\n      setTutionData([]);\r\n    };\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <div className=\"tutorview_wrapper\">\r\n      <main className=\"tutorview_body\">\r\n        <h3>Tuitions details</h3>\r\n        <Row gutter={[16, 32]}>\r\n          {tutionData.length > 0\r\n            ? tutionData.map((item) => (\r\n                <Col md={8} sm={12} xs={24}>\r\n                  <Card>\r\n                    <div className=\"box\">\r\n                      <div className=\"userInfo\">\r\n                        <div className=\"userDetails\">\r\n                          <div className=\"name\">\r\n                            <p className=\"title\"> {item.tutorName}</p>\r\n                            <div className=\"subtitle\">{item.subject}</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"time\">\r\n                          <p>\r\n                            <FieldTimeOutlined />\r\n                            {new Date(item.timing).toLocaleTimeString(\"en-US\")}\r\n                          </p>\r\n                          <p className=\"day\">Every {item.day}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"price_wrapper\">\r\n                        <div className=\"price\">\r\n                          <p className=\"title\">\r\n                            ₹ {item.fees}{\" \"}\r\n                            <span className=\"subtitle\">/month</span>\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"loc\">\r\n                          <p>\r\n                            <EnvironmentOutlined /> {item.loc}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"btn_wrapper\">\r\n                      <Popconfirm\r\n                        placement=\"topRight\"\r\n                        title=\"\r\n                Are you sure you want to delete?\"\r\n                        onConfirm={() => handleDelete(item.id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                      >\r\n                        <Button\r\n                          danger\r\n                          type=\"link\"\r\n                          shape=\"circle\"\r\n                          icon={<DeleteOutlined />}\r\n                        />\r\n                      </Popconfirm>\r\n                    </div>\r\n                  </Card>\r\n                </Col>\r\n              ))\r\n            : null}\r\n        </Row>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutor;\r\n","F:\\reactjs\\prenotes\\src\\components\\Errors\\NotFound.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\protectedRoute.jsx",[],{"ruleId":"252","severity":1,"message":"253","line":19,"column":45,"nodeType":"254","endLine":19,"endColumn":50},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":22,"column":43,"nodeType":"261","messageId":"262","endLine":22,"endColumn":48},{"ruleId":"263","severity":1,"message":"264","line":35,"column":6,"nodeType":"265","endLine":35,"endColumn":8,"suggestions":"266"},{"ruleId":"252","severity":1,"message":"253","line":41,"column":33,"nodeType":"254","endLine":41,"endColumn":38},{"ruleId":"252","severity":1,"message":"253","line":42,"column":51,"nodeType":"254","endLine":42,"endColumn":56},{"ruleId":"252","severity":1,"message":"253","line":46,"column":13,"nodeType":"254","endLine":46,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":52,"column":13,"nodeType":"254","endLine":52,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":58,"column":13,"nodeType":"254","endLine":58,"endColumn":18},{"ruleId":"255","replacedBy":"267"},{"ruleId":"257","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":3,"column":1,"nodeType":"271","endLine":21,"endColumn":3},{"ruleId":"269","severity":1,"message":"272","line":21,"column":1,"nodeType":"271","endLine":26,"endColumn":3},{"ruleId":"255","replacedBy":"273"},{"ruleId":"257","replacedBy":"274"},{"ruleId":"263","severity":1,"message":"275","line":192,"column":6,"nodeType":"265","endLine":192,"endColumn":16,"suggestions":"276"},{"ruleId":"255","replacedBy":"277"},{"ruleId":"257","replacedBy":"278"},{"ruleId":"263","severity":1,"message":"279","line":46,"column":6,"nodeType":"265","endLine":46,"endColumn":23,"suggestions":"280"},{"ruleId":"259","severity":1,"message":"281","line":51,"column":10,"nodeType":"261","messageId":"262","endLine":51,"endColumn":14},{"ruleId":"259","severity":1,"message":"282","line":56,"column":12,"nodeType":"261","messageId":"262","endLine":56,"endColumn":19},{"ruleId":"263","severity":1,"message":"283","line":63,"column":6,"nodeType":"265","endLine":63,"endColumn":23,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":132,"column":64,"nodeType":"254","endLine":132,"endColumn":79},{"ruleId":"287","severity":1,"message":"288","line":140,"column":44,"nodeType":"289","messageId":"290","endLine":140,"endColumn":46},{"ruleId":"285","severity":1,"message":"286","line":143,"column":31,"nodeType":"254","endLine":143,"endColumn":46},{"ruleId":"263","severity":1,"message":"291","line":53,"column":6,"nodeType":"265","endLine":53,"endColumn":23,"suggestions":"292"},{"ruleId":"255","replacedBy":"293"},{"ruleId":"257","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":141,"column":9,"nodeType":"297","endLine":141,"endColumn":37},{"ruleId":"285","severity":1,"message":"286","line":228,"column":33,"nodeType":"254","endLine":228,"endColumn":48},{"ruleId":"287","severity":1,"message":"288","line":237,"column":48,"nodeType":"289","messageId":"290","endLine":237,"endColumn":50},{"ruleId":"285","severity":1,"message":"286","line":240,"column":35,"nodeType":"254","endLine":240,"endColumn":50},{"ruleId":"255","replacedBy":"298"},{"ruleId":"257","replacedBy":"299"},{"ruleId":"295","severity":1,"message":"296","line":55,"column":15,"nodeType":"297","endLine":55,"endColumn":55},{"ruleId":"255","replacedBy":"300"},{"ruleId":"257","replacedBy":"301"},{"ruleId":"263","severity":1,"message":"302","line":46,"column":6,"nodeType":"265","endLine":46,"endColumn":28,"suggestions":"303"},{"ruleId":"263","severity":1,"message":"304","line":122,"column":6,"nodeType":"265","endLine":122,"endColumn":14,"suggestions":"305"},{"ruleId":"255","replacedBy":"306"},{"ruleId":"257","replacedBy":"307"},{"ruleId":"263","severity":1,"message":"308","line":52,"column":6,"nodeType":"265","endLine":52,"endColumn":23,"suggestions":"309"},{"ruleId":"263","severity":1,"message":"310","line":157,"column":6,"nodeType":"265","endLine":157,"endColumn":8,"suggestions":"311"},{"ruleId":"285","severity":1,"message":"286","line":244,"column":55,"nodeType":"254","endLine":244,"endColumn":70},{"ruleId":"287","severity":1,"message":"288","line":253,"column":43,"nodeType":"289","messageId":"290","endLine":253,"endColumn":45},{"ruleId":"285","severity":1,"message":"286","line":273,"column":31,"nodeType":"254","endLine":273,"endColumn":46},{"ruleId":"285","severity":1,"message":"286","line":281,"column":31,"nodeType":"254","endLine":281,"endColumn":46},{"ruleId":"263","severity":1,"message":"312","line":112,"column":6,"nodeType":"265","endLine":112,"endColumn":23,"suggestions":"313"},{"ruleId":"295","severity":1,"message":"296","line":117,"column":9,"nodeType":"297","endLine":117,"endColumn":37},{"ruleId":"314","severity":1,"message":"315","line":203,"column":23,"nodeType":"297","endLine":203,"endColumn":76},{"ruleId":"316","severity":1,"message":"317","line":58,"column":74,"nodeType":"318","messageId":"319","endLine":58,"endColumn":76},{"ruleId":"255","replacedBy":"320"},{"ruleId":"257","replacedBy":"321"},{"ruleId":"259","severity":1,"message":"322","line":20,"column":10,"nodeType":"261","messageId":"262","endLine":20,"endColumn":22},{"ruleId":"259","severity":1,"message":"323","line":20,"column":24,"nodeType":"261","messageId":"262","endLine":20,"endColumn":39},{"ruleId":"263","severity":1,"message":"324","line":83,"column":6,"nodeType":"265","endLine":83,"endColumn":23,"suggestions":"325"},{"ruleId":"252","severity":1,"message":"253","line":168,"column":25,"nodeType":"254","endLine":168,"endColumn":40},{"ruleId":"259","severity":1,"message":"326","line":6,"column":10,"nodeType":"261","messageId":"262","endLine":6,"endColumn":16},{"ruleId":"259","severity":1,"message":"327","line":14,"column":7,"nodeType":"261","messageId":"262","endLine":14,"endColumn":14},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["330"],["328"],["329"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default",["328"],["329"],"React Hook useEffect has missing dependencies: 'eduForm' and 'infoForm'. Either include them or remove the dependency array.",["331"],["328"],["329"],"React Hook useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.",["332"],"'form' is assigned a value but never used.","'confirm' is defined but never used.","React Hook useEffect has a missing dependency: 'getExampaper'. Either include it or remove the dependency array.",["333"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchContacts'. Either include it or remove the dependency array.",["334"],["328"],["329"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["328"],["329"],["328"],["329"],"React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'handleMessages'. Either include it or remove the dependency array.",["336"],["328"],["329"],"React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["337"],"React Hook useEffect has missing dependencies: 'form' and 'props.location.state'. Either include them or remove the dependency array.",["338"],"React Hook useEffect has a missing dependency: 'getAllBooks'. Either include it or remove the dependency array.",["339"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["328"],["329"],"'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllTutions'. Either include it or remove the dependency array.",["340"],"'Avatar' is defined but never used.","'BASEURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [getUser]",{"range":"363","text":"364"},"Update the dependencies array to be: [eduForm, infoForm, userData]",{"range":"365","text":"366"},"Update the dependencies array to be: [getBooks, userData.iduser]",{"range":"367","text":"368"},"Update the dependencies array to be: [getExampaper, userData.iduser]",{"range":"369","text":"370"},"Update the dependencies array to be: [fetchContacts, userData.iduser]",{"range":"371","text":"372"},"Update the dependencies array to be: [friendDetails.roomId, getMessages]",{"range":"373","text":"374"},"Update the dependencies array to be: [handleMessages, socket]",{"range":"375","text":"376"},"Update the dependencies array to be: [getNotes, userData.iduser]",{"range":"377","text":"378"},"Update the dependencies array to be: [form, props.location.state]",{"range":"379","text":"380"},"Update the dependencies array to be: [getAllBooks, userData.iduser]",{"range":"381","text":"382"},"Update the dependencies array to be: [getAllTutions, userData.iduser]",{"range":"383","text":"384"},[1481,1483],"[getUser]",[5388,5398],"[eduForm, infoForm, userData]",[1109,1126],"[getBooks, userData.iduser]",[1473,1490],"[getExampaper, userData.iduser]",[1859,1876],"[fetchContacts, userData.iduser]",[1448,1470],"[friendDetails.roomId, getMessages]",[3310,3318],"[handleMessages, socket]",[1303,1320],"[getNotes, userData.iduser]",[3500,3502],"[form, props.location.state]",[3025,3042],"[getAllBooks, userData.iduser]",[2348,2365],"[getAllTutions, userData.iduser]"]