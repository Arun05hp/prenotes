[{"F:\\reactjs\\prenotes\\src\\App.js":"1","F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js":"2","F:\\reactjs\\prenotes\\src\\components\\Exam\\Upload\\ExamUpload.jsx":"3","F:\\reactjs\\prenotes\\src\\context\\createDataContext.js":"4","F:\\reactjs\\prenotes\\src\\services\\httpService.js":"5","F:\\reactjs\\prenotes\\src\\components\\Notification\\Notification.jsx":"6","F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx":"7","F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx":"8","F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx":"9","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx":"10","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Books\\Books.jsx":"11","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Exampaper\\Exampaper.jsx":"12","F:\\reactjs\\prenotes\\src\\components\\Notes\\Upload\\NotesUpload.jsx":"13","F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx":"14","F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx":"15","F:\\reactjs\\prenotes\\src\\context\\BooksContext.js":"16","F:\\reactjs\\prenotes\\src\\components\\Exam\\Search\\ExamSearch.jsx":"17","F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx":"18","F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx":"19","F:\\reactjs\\prenotes\\src\\context\\SocketProvider.js":"20","F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContainer.jsx":"21","F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContacts.jsx":"22","F:\\reactjs\\prenotes\\src\\index.js":"23","F:\\reactjs\\prenotes\\src\\context\\AuthContext.js":"24","F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js":"25","F:\\reactjs\\prenotes\\src\\components\\Books\\Sell\\SellBook.jsx":"26","F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx":"27","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Notes\\Notes.jsx":"28","F:\\reactjs\\prenotes\\src\\components\\Notes\\Search\\NotesSearch.jsx":"29","F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx":"30","F:\\reactjs\\prenotes\\src\\components\\Books\\Buy\\BuyBook.jsx":"31","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx":"32","F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx":"33","F:\\reactjs\\prenotes\\src\\context\\NotesContext.js":"34","F:\\reactjs\\prenotes\\src\\context\\ConversationsProvider.js":"35","F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx":"36","F:\\reactjs\\prenotes\\src\\helper\\useSessionStorage.js":"37"},{"size":851,"mtime":1608613434553,"results":"38","hashOfConfig":"39"},{"size":2424,"mtime":1609086210903,"results":"40","hashOfConfig":"39"},{"size":7803,"mtime":1608697232450,"results":"41","hashOfConfig":"39"},{"size":547,"mtime":1607870751521,"results":"42","hashOfConfig":"39"},{"size":923,"mtime":1607839525268,"results":"43","hashOfConfig":"39"},{"size":6990,"mtime":1609084301152,"results":"44","hashOfConfig":"39"},{"size":2964,"mtime":1608653138021,"results":"45","hashOfConfig":"39"},{"size":6440,"mtime":1607591030778,"results":"46","hashOfConfig":"39"},{"size":19687,"mtime":1608699643572,"results":"47","hashOfConfig":"39"},{"size":2113,"mtime":1609071326176,"results":"48","hashOfConfig":"39"},{"size":3163,"mtime":1609088657158,"results":"49","hashOfConfig":"39"},{"size":5524,"mtime":1608864879453,"results":"50","hashOfConfig":"39"},{"size":4210,"mtime":1608864949360,"results":"51","hashOfConfig":"39"},{"size":2011,"mtime":1608864968077,"results":"52","hashOfConfig":"39"},{"size":2820,"mtime":1609056104888,"results":"53","hashOfConfig":"39"},{"size":823,"mtime":1608613209969,"results":"54","hashOfConfig":"39"},{"size":8632,"mtime":1608702342535,"results":"55","hashOfConfig":"39"},{"size":4871,"mtime":1609086800085,"results":"56","hashOfConfig":"39"},{"size":4262,"mtime":1609044825591,"results":"57","hashOfConfig":"39"},{"size":624,"mtime":1609003053102,"results":"58","hashOfConfig":"39"},{"size":3637,"mtime":1609053974815,"results":"59","hashOfConfig":"39"},{"size":1248,"mtime":1609050221262,"results":"60","hashOfConfig":"39"},{"size":219,"mtime":1607270798331,"results":"61","hashOfConfig":"39"},{"size":2060,"mtime":1609044907204,"results":"62","hashOfConfig":"39"},{"size":989,"mtime":1607935394705,"results":"63","hashOfConfig":"39"},{"size":5105,"mtime":1608610849035,"results":"64","hashOfConfig":"39"},{"size":2643,"mtime":1608223650918,"results":"65","hashOfConfig":"39"},{"size":3155,"mtime":1609088546514,"results":"66","hashOfConfig":"39"},{"size":8342,"mtime":1609087441317,"results":"67","hashOfConfig":"39"},{"size":1171,"mtime":1607914471486,"results":"68","hashOfConfig":"39"},{"size":5084,"mtime":1609075439924,"results":"69","hashOfConfig":"39"},{"size":15321,"mtime":1608259382410,"results":"70","hashOfConfig":"39"},{"size":327,"mtime":1607503403301,"results":"71","hashOfConfig":"39"},{"size":1358,"mtime":1608831317077,"results":"72","hashOfConfig":"39"},{"size":3166,"mtime":1609003836063,"results":"73","hashOfConfig":"39"},{"size":657,"mtime":1608811101478,"results":"74","hashOfConfig":"39"},{"size":628,"mtime":1609038541280,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"zyjns1",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\reactjs\\prenotes\\src\\App.js",[],["164","165"],"F:\\reactjs\\prenotes\\src\\Navigation\\Navigation.js",["166"],"F:\\reactjs\\prenotes\\src\\components\\Exam\\Upload\\ExamUpload.jsx",[],"F:\\reactjs\\prenotes\\src\\context\\createDataContext.js",["167"],"import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, defaultValue) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, defaultValue);\r\n    const boundActions = {};\r\n\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n  return { Context, Provider };\r\n};\r\n",["168","169"],"F:\\reactjs\\prenotes\\src\\services\\httpService.js",["170"],"import axios from \"axios\";\r\n\r\nconst BASE = process.env.REACT_APP_BASE_URL;\r\n\r\naxios.defaults.baseURL = BASE;\r\n// axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n// axios.interceptors.response.use(null, (error) => {\r\n//   const expectedError =\r\n//     error.response &&\r\n//     error.response.status >= 400 &&\r\n//     error.response.status < 500;\r\n//   if (!expectedError) {\r\n//     logger.log(error);\r\n//     toast.error(\"An unexpected error occurred\");\r\n//   }\r\n//   return Promise.reject(error);\r\n// });\r\naxios.interceptors.request.use(\r\n  async (config) => {\r\n    const token = await sessionStorage.getItem(\"preNotest\");\r\n\r\n    if (token) {\r\n      config.headers.Authorization = `Pre@Notes20 ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n",["171","172"],"F:\\reactjs\\prenotes\\src\\components\\Notification\\Notification.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\Profile.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Home\\UserSlider.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\PersonalInfo.jsx",["173"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  message,\r\n  Modal,\r\n  Select,\r\n  Upload,\r\n} from \"antd\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport http from \"../../services/httpService\";\r\nimport {\r\n  UserOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD/MM/YYYY\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst PersonalInfo = () => {\r\n  const { state, getUserDetails } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [visibleInfo, setVisibleInfo] = useState(false);\r\n  const [visibleEdu, setVisibleEdu] = useState(false);\r\n  const [visiblePic, setVisiblePic] = useState(false);\r\n  const [imageData, setImageData] = useState({\r\n    loading: false,\r\n    imgUrl: null,\r\n  });\r\n  const [disabledAddr, setDisabledAddr] = useState(0);\r\n  const BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const actionUrl = BASEURL + \"user/profile/\" + userData.iduser;\r\n\r\n  const [infoForm] = Form.useForm();\r\n  const [eduForm] = Form.useForm();\r\n  const [basicForm] = Form.useForm();\r\n  const [edForm] = Form.useForm();\r\n\r\n  const handleCancel = () => {\r\n    setVisibleInfo(false);\r\n    setVisibleEdu(false);\r\n  };\r\n\r\n  const handleIsHosteler = (e) => {\r\n    setDisabledAddr(e.target.value);\r\n  };\r\n\r\n  const handleBasicInfo = () => {\r\n    basicForm.setFieldsValue({\r\n      name: userData.name,\r\n      dob: moment(userData.dob),\r\n      mno: userData.mno,\r\n      gender: userData.gender,\r\n      email: userData.email,\r\n    });\r\n    setVisibleInfo(true);\r\n  };\r\n  const handleEdu = () => {\r\n    edForm.setFieldsValue({\r\n      institute: userData.institute,\r\n      branch: userData.branch,\r\n      sem: userData.sem,\r\n      batch: [moment(userData.batchStart), moment(userData.batchEnd)],\r\n      regno: userData.regno,\r\n      hosteler: userData.hosteler,\r\n      hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n    });\r\n\r\n    setVisibleEdu(true);\r\n  };\r\n\r\n  const submitBasicInfo = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    http\r\n      .put(\"user/updateprofile/\" + userData.iduser, values)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        basicForm.resetFields();\r\n        setVisibleInfo(false);\r\n        message.success(\"Profile Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const submitEdu = (values) => {\r\n    console.log(\"Success:\", values);\r\n    let data = {\r\n      ...values,\r\n\r\n      batchStart: values.batch[0],\r\n      batchEnd: values.batch[1],\r\n      hostelAddress: values.hosteler ? values.hostelAddress : null,\r\n    };\r\n    delete data.batch;\r\n    http\r\n      .put(\"user/updateEdu/\" + userData.iduser, data)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        getUserDetails(res.userId);\r\n        edForm.resetFields();\r\n        setVisibleEdu(false);\r\n        message.success(\"Education Updated Successfully\", 3);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    setImageData({ loading: true, imgUrl: null });\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) =>\r\n        setImageData({ loading: false, imgUrl: imageUrl })\r\n      );\r\n      getUserDetails(userData.iduser);\r\n      message.success(\"Profile Image Updated Successfully\", 3);\r\n      setVisiblePic(false);\r\n    }\r\n    if (info.file.status === \"error\") {\r\n      message.error(\"Failed\", 3);\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {imageData.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      infoForm.setFieldsValue({\r\n        name: userData.name,\r\n        dob: moment(userData.dob).format(dateFormat),\r\n        mno: Number(userData.mno),\r\n        gender: userData.gender,\r\n        email: userData.email,\r\n      });\r\n      setDisabledAddr(userData.hosteler);\r\n      eduForm.setFieldsValue({\r\n        institute: userData.institute,\r\n        branch: userData.branch,\r\n        sem: Number(userData.sem),\r\n        batch: `${moment(userData.batchStart).format(\"YYYY\")} - ${moment(\r\n          userData.batchEnd\r\n        ).format(\"YYYY\")}`,\r\n        regno: userData.regno,\r\n        hosteler: userData.hosteler ? \"Yes\" : \"No\",\r\n        hostelAddress: userData.hosteler ? userData.hostelAddress : \" \",\r\n      });\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"innerWrapper\">\r\n        <div className=\"avatar_wrapper\">\r\n          <Avatar\r\n            size={{ xs: 64, sm: 64, md: 64, lg: 64, xl: 100, xxl: 100 }}\r\n            src={\r\n              userData.profileImg != null ? BASEURL + userData.profileImg : null\r\n            }\r\n            icon={<UserOutlined />}\r\n            key={userData.profileImg}\r\n          />\r\n          <Button className=\"btn\" onClick={() => setVisiblePic(true)}>\r\n            Change Photo\r\n          </Button>\r\n        </div>\r\n        <div className=\"heading_wrap\">\r\n          <h3>Basic Information</h3>\r\n          <div className=\"circle\" onClick={handleBasicInfo}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n\r\n        <Form form={infoForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Name\" name=\"name\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"DOB\" name=\"dob\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Mobile Number\" name=\"mno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Gender\" name=\"gender\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Email\" name=\"email\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        <div className=\"heading_wrap\">\r\n          <h3>Education</h3>\r\n          <div className=\"circle\" onClick={handleEdu}>\r\n            <EditOutlined />\r\n          </div>\r\n        </div>\r\n        <Form form={eduForm} {...layout} layout=\"vertical\">\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Institution\" name=\"institute\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Branch\" name=\"branch\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Semester\" name=\"sem\">\r\n                <Select size=\"large\" disabled>\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label={\"Batch\"} name=\"batch\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item label=\"Registration No.\" name=\"regno\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item name=\"hosteler\" label=\"Hosteler\">\r\n                <Input size=\"large\" disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <Modal\r\n        visible={visibleInfo}\r\n        title=\"Basic Information\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={basicForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={basicForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitBasicInfo}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Please input your name!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"DOB\"\r\n                name=\"dob\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <DatePicker\r\n                  allowClear={false}\r\n                  style={{ width: \"100%\" }}\r\n                  format={dateFormat}\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Mobile Number\"\r\n                name=\"mno\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your mobile number!\",\r\n                  },\r\n                  {\r\n                    minLength: 10,\r\n                    maxLength: 10,\r\n                    pattern: \"^[0-9]{10}$\",\r\n                    message: \"Must be 10 digits\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"tel\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                >\r\n                  <Radio.Button value=\"Male\">Male</Radio.Button>\r\n                  <Radio.Button value=\"Female\">Female</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your username!\",\r\n                  },\r\n                  { type: \"email\", message: \"Please input valid email!\" },\r\n                ]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n      <Modal\r\n        visible={visibleEdu}\r\n        title=\"Education\"\r\n        onCancel={handleCancel}\r\n        width={800}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={edForm.submit}>\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={edForm}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          onFinish={submitEdu}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Institution\"\r\n                name=\"institute\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select College\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>\r\n                    Sant Longowal Institute of Engineering and Technology\r\n                  </Option>\r\n                  <Option value={2}>Panjab University</Option>\r\n                  {/* <Option value={3}>Communicated</Option>\r\n                      <Option value={4}>Identified</Option> */}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Branch\"\r\n                name=\"branch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  size=\"large\"\r\n                  placeholder=\"Select Branch\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  <Option value={1}>Mechanical Engineering</Option>\r\n                  <Option value={2}>Computer Science Engineering</Option>\r\n                  <Option value={3}>Electrical Engineering</Option>\r\n                  <Option value={4}>Civil Engineering</Option>\r\n                  <Option value={5}>Instrumentation Engineering</Option>\r\n                  <Option value={6}>Chemical Engineering</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Semester\"\r\n                name=\"sem\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Required!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select size=\"large\">\r\n                  <Option value={1}>1</Option>\r\n                  <Option value={2}>2</Option>\r\n                  <Option value={3}>3</Option>\r\n                  <Option value={4}>4</Option>\r\n                  <Option value={5}>5</Option>\r\n                  <Option value={6}>6</Option>\r\n                  <Option value={7}>7</Option>\r\n                  <Option value={8}>8</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label={\"Batch\"}\r\n                name=\"batch\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <RangePicker\r\n                  style={{ width: \"100%\" }}\r\n                  picker=\"year\"\r\n                  size=\"large\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                label=\"Registration No.\"\r\n                name=\"regno\"\r\n                rules={[{ required: true, message: \"Required!\" }]}\r\n              >\r\n                <Input autoComplete=\"off\" size=\"large\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hosteler\"\r\n                label=\"Hosteler\"\r\n                rules={[{ required: true, message: \"Please pick an item!\" }]}\r\n              >\r\n                <Radio.Group\r\n                  optionType=\"button\"\r\n                  buttonStyle=\"solid\"\r\n                  size=\"large\"\r\n                  onChange={handleIsHosteler}\r\n                >\r\n                  <Radio.Button value={1}>Yes</Radio.Button>\r\n                  <Radio.Button value={0}>No</Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={12} xs={24}>\r\n              <Form.Item\r\n                name=\"hostelAddress\"\r\n                label=\"Hostel Address\"\r\n                rules={[{ required: disabledAddr, message: \"Required!\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  maxLength={250}\r\n                  rows={2}\r\n                  disabled={!disabledAddr}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={visiblePic}\r\n        title=\"Change Profile Image\"\r\n        onCancel={() => setVisiblePic(false)}\r\n        footer={null}\r\n        style={{ textAlign: \"center\", maxWidth: \"300px\" }}\r\n      >\r\n        <Upload\r\n          name=\"photo\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={actionUrl}\r\n          beforeUpload={beforeUpload}\r\n          onChange={handleChange}\r\n        >\r\n          {imageData.imgUrl ? (\r\n            <img\r\n              src={imageData.imgUrl}\r\n              alt=\"avatar\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            uploadButton\r\n          )}\r\n        </Upload>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","F:\\reactjs\\prenotes\\src\\components\\Auth\\Signin.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Books\\Books.jsx",["174"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Exampaper\\Exampaper.jsx",["175","176","177","178","179","180"],"F:\\reactjs\\prenotes\\src\\components\\Notes\\Upload\\NotesUpload.jsx",["181"],"import { FilePdfOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input, message, Select, Upload } from \"antd\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../../context/AuthContext\";\r\nimport http from \"../../../services/httpService\";\r\nimport \"./notesupload.css\";\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nconst NotesUpload = () => {\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [form] = Form.useForm();\r\n  const [fileData, setFileData] = useState({\r\n    fileList: [],\r\n    uploading: false,\r\n  });\r\n\r\n  const handleUpload = (val) => {\r\n    const formData = new FormData();\r\n    fileData.fileList.forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    formData.append(\"topic\", val.topic);\r\n    formData.append(\"iduser\", val.iduser);\r\n    formData.append(\"category\", val.category);\r\n    formData.append(\"description\", val.description);\r\n\r\n    http\r\n      .post(\"upload/pdf\", formData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Notes Uploaded Successfully\", 3);\r\n        form.resetFields();\r\n        setFileData({ fileList: [], uploading: false });\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n  const onFinish = (val) => {\r\n    val.iduser = userData.iduser;\r\n    delete val.file;\r\n    handleUpload(val);\r\n  };\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    onRemove: (file) => {\r\n      setFileData((prev) => {\r\n        const index = fileData.fileList.indexOf(file);\r\n        const newFileList = fileData.fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        return {\r\n          ...prev,\r\n          fileList: newFileList,\r\n        };\r\n      });\r\n    },\r\n    beforeUpload: (file) => {\r\n      if (file.type === \"application/pdf\") {\r\n        setFileData({\r\n          fileList: [file],\r\n        });\r\n      } else {\r\n        message.error(\"Only pdf\");\r\n      }\r\n      return false;\r\n    },\r\n    fileList: fileData.fileList,\r\n    multiple: false,\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes_wrapper\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        initialValues={{ remember: true }}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"Select File\"\r\n          name=\"file\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Select File\",\r\n            },\r\n          ]}\r\n        >\r\n          <Dragger {...props}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <FilePdfOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or Drag file here</p>\r\n          </Dragger>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Topic\"\r\n          name=\"topic\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Topic!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input autoComplete=\"off\" size=\"large\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Required!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select size=\"large\">\r\n            <Option value={1}>Physics</Option>\r\n            <Option value={2}>Chemistry</Option>\r\n            <Option value={3}>Mathematics</Option>\r\n            <Option value={4}>Computer</Option>\r\n            <Option value={5}>Mechanical</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          rules={[{ required: true, message: \"Required!\" }]}\r\n        >\r\n          <Input.TextArea maxLength={250} rows={2} />\r\n        </Form.Item>\r\n\r\n        <div className=\"btn_wrapper\">\r\n          <Button htmlType=\"submit\">Upload</Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesUpload;\r\n","F:\\reactjs\\prenotes\\src\\components\\Profile\\ChangePassword\\ChangePassword.jsx",[],["182","183"],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\Messanger.jsx",["184"],"import { Col, Row, message } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketProvider } from \"../../context/SocketProvider.js\";\r\nimport ChatContacts from \"./ChatContacts.jsx\";\r\nimport ChatContainer from \"./ChatContainer.jsx\";\r\nimport http from \"../../services/httpService\";\r\nimport useSessionStorage from \"../../helper/useSessionStorage\";\r\nimport mailImg from \"../../assets/images/mail.png\";\r\nimport \"./messanger.css\";\r\n\r\nconst Messanger = () => {\r\n  const { state } = useContext(AuthContext);\r\n  const { userData } = state;\r\n  const [id, setId] = useState(-1);\r\n  const [contactLists, setContactsList] = useSessionStorage(\"contacts\", []);\r\n  const [friendDetails, setFriendDetails] = useState({\r\n    id: null,\r\n    userDetails: { name: null, profileImg: null },\r\n    roomId: null,\r\n  });\r\n  console.log(\"friendDetails\", friendDetails);\r\n  const fetchContacts = (id) => {\r\n    http\r\n      .get(\"contacts/contacts/\" + id)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        console.log(res.contactsData);\r\n        if (res.contactsData.length > 0) {\r\n          console.log(res.contactsData[0].uuid);\r\n          setId(res.contactsData[0].uuid);\r\n          if (res.contactsData[0].contacts) {\r\n            setContactsList(res.contactsData[0].contacts);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.iduser) fetchContacts(userData.iduser);\r\n    console.log(\"m id\", userData.iduser);\r\n  }, [userData.iduser]);\r\n\r\n  return (\r\n    <SocketProvider id={id}>\r\n      <div className=\"msg_wrapper\">\r\n        <Row gutter={[4, 4]}>\r\n          <Col md={6} xs={24}>\r\n            <ChatContacts\r\n              contactLists={contactLists}\r\n              setFriendDetails={setFriendDetails}\r\n            />\r\n          </Col>\r\n          <Col md={18} xs={24}>\r\n            {friendDetails.id ? (\r\n              <ChatContainer id={id} friendDetails={friendDetails} />\r\n            ) : (\r\n              <div className=\"nomessages\">\r\n                <div className=\"nomsg_body\">\r\n                  <img className=\"mail\" src={mailImg} alt=\"Mail Png\" />\r\n                  <p className=\"title\">No message yet.</p>\r\n                  <p className=\"subtitle\">\r\n                    Once you connect, your messages will be displayed here.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </SocketProvider>\r\n  );\r\n};\r\n\r\nexport default Messanger;\r\n","F:\\reactjs\\prenotes\\src\\context\\BooksContext.js",[],["185","186"],"F:\\reactjs\\prenotes\\src\\components\\Exam\\Search\\ExamSearch.jsx",["187","188","189","190"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  Select,\r\n  Upload,\r\n} from \"antd\";\r\n\r\nimport bg from \"../../../assets/bg/books.png\";\r\n\r\nimport http from \"../../../services/httpService\";\r\nimport \"./examsearch.css\";\r\nimport {\r\n  SearchOutlined,\r\n  FileTextOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nfunction getBranch(id) {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Mechanical Engg.\";\r\n    case 2:\r\n      return \"Computer Sci. Engg.\";\r\n    case 3:\r\n      return \"Electrical Engg.\";\r\n    case 4:\r\n      return \"Civil Engg.\";\r\n    case 5:\r\n      return \"Instrumentation Engg.\";\r\n    case 6:\r\n      return \"Chemical Engg.\";\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\nconst ExamSearch = () => {\r\n  const BASEURL = process.env.REACT_APP_BASE_URL;\r\n\r\n  const [examPaperData, setExamPaperData] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [examId, setExamId] = useState(-1);\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const onFinish = (val) => {\r\n    http\r\n      .get(\"exam/searchexampaper\", {\r\n        params: {\r\n          ...val,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setExamPaperData(res.examPaperData);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  const getAllExamPaper = () => {\r\n    http\r\n      .get(\"exam/allexampaper\")\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setExamPaperData(res.examPaperData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllExamPaper();\r\n    return () => {\r\n      setExamPaperData([]);\r\n    };\r\n  }, []);\r\n\r\n  const handleUpload = (id) => {\r\n    setExamId(id);\r\n    setVisibleModal(true);\r\n  };\r\n\r\n  const uploadSol = () => {\r\n    const formData = new FormData();\r\n    fileList.forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    http\r\n      .post(\"exam/uploadsolution/\" + examId, formData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((res) => {\r\n        setFileList([]);\r\n        setVisibleModal(false);\r\n        message.success(\" Uploaded Successfully\", 3);\r\n        getAllExamPaper();\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) return message.error(\"Network Error\", 3);\r\n        if (err.response.status && err.response.status === 400)\r\n          message.error(err.response.data.message, 3);\r\n      });\r\n  };\r\n\r\n  function beforeUpload(file) {\r\n    if (\r\n      file.type === \"application/pdf\" ||\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\"\r\n    ) {\r\n      setFileList([file]);\r\n    } else {\r\n      message.error(\"Only pdf, jpeg, png\");\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function onRemove(file) {\r\n    setFileList([]);\r\n  }\r\n  return (\r\n    <div className=\"ExamSearch_wrapper\">\r\n      <header>\r\n        <img src={bg} alt=\"image\" />\r\n        <div className=\"input_wrapper\">\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            initialValues={{ string: \"\" }}\r\n            name=\"basic\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Row gutter={16}>\r\n              <Col md={13} sm={24} xs={24}>\r\n                <Form.Item name=\"string\">\r\n                  <Input\r\n                    placeholder=\"What are you looking for...\"\r\n                    autoComplete=\"off\"\r\n                    size=\"large\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col md={7} sm={12} xs={12}>\r\n                <Form.Item name=\"branch\">\r\n                  <Select\r\n                    showSearch\r\n                    size=\"large\"\r\n                    placeholder=\"Select Branch\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                      optionA.children\r\n                        .toLowerCase()\r\n                        .localeCompare(optionB.children.toLowerCase())\r\n                    }\r\n                  >\r\n                    <Option value={1}>Mechanical Engineering</Option>\r\n                    <Option value={2}>Computer Science Engineering</Option>\r\n                    <Option value={3}>Electrical Engineering</Option>\r\n                    <Option value={4}>Civil Engineering</Option>\r\n                    <Option value={5}>Instrumentation Engineering</Option>\r\n                    <Option value={6}>Chemical Engineering</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col md={4} sm={12} xs={12}>\r\n                <Form.Item>\r\n                  <div className=\"btn_wrapper\">\r\n                    <Button htmlType=\"submit\" size=\"large\">\r\n                      <SearchOutlined />\r\n                    </Button>\r\n                  </div>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </header>\r\n      <main className=\"ExamSearch_body\">\r\n        <Row gutter={[16, 16]}>\r\n          {examPaperData.length > 0\r\n            ? examPaperData.map((item) => {\r\n                return (\r\n                  <Col key={item.idnotes} md={12} xs={24}>\r\n                    <div className=\"innerWrapper\">\r\n                      <Card className=\"itemWrapper\">\r\n                        <Row gutter={8}>\r\n                          <Col md={6} xs={6}>\r\n                            <div className=\"file-icon\">\r\n                              <FileTextOutlined />\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={18} xs={18}>\r\n                            <h3>{item.subject}</h3>\r\n                            <p>{getBranch(item.branch)}</p>\r\n                          </Col>\r\n                          <Col md={12} sm={12} xs={24}>\r\n                            <div className=\"btn_wrapper\">\r\n                              <a\r\n                                href={BASEURL + item.quefileLink}\r\n                                target=\"_blank\"\r\n                              >\r\n                                <Button> View Exam Paper</Button>\r\n                              </a>\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={12} sm={12} xs={24}>\r\n                            <div className=\"btn_wrapper\">\r\n                              {item.solfileLink != null &&\r\n                              item.solfileLink != \"\" ? (\r\n                                <a\r\n                                  href={BASEURL + item.solfileLink}\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <Button> View Soultion</Button>\r\n                                </a>\r\n                              ) : (\r\n                                <Button\r\n                                  onClick={() => handleUpload(item.idexam)}\r\n                                >\r\n                                  Upload Soultion\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    </div>\r\n                  </Col>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </Row>\r\n      </main>\r\n      <Modal\r\n        visible={visibleModal}\r\n        title=\"Upload Solution\"\r\n        onCancel={() => setVisibleModal(false)}\r\n        footer={[\r\n          <Button className=\"btn-primary\" onClick={uploadSol}>\r\n            Upload\r\n          </Button>,\r\n        ]}\r\n        style={{ textAlign: \"center\", maxWidth: \"300px\" }}\r\n      >\r\n        <Dragger\r\n          name=\"file\"\r\n          multiple={false}\r\n          fileList={fileList}\r\n          beforeUpload={beforeUpload}\r\n          onRemove={onRemove}\r\n        >\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <UploadOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or Drag file here</p>\r\n        </Dragger>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamSearch;\r\n","F:\\reactjs\\prenotes\\src\\components\\Home\\Home.jsx",["191"],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\MenuItems.jsx",["192"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Avatar, Badge, Button, Menu, Modal, Grid } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Context as AuthContext } from \"../../context/AuthContext\";\r\nimport queryString from \"query-string\";\r\nimport SignIn from \"../Auth/Signin\";\r\nimport { BellOutlined, MessageOutlined } from \"@ant-design/icons\";\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\nconst MenuItems = () => {\r\n  const BASEURL = process.env.REACT_APP_BASE_URL;\r\n  const { md } = useBreakpoint();\r\n\r\n  const { state, logout } = useContext(AuthContext);\r\n  const { loginFlag, userData } = state;\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleClick = ({ key }) => {\r\n    console.log(key);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(window.location.search);\r\n\r\n    if (params.signin && params.signin === \"true\") {\r\n      showModal();\r\n    }\r\n  }, []);\r\n\r\n  return loginFlag === false ? (\r\n    <div className=\"nav_wrapper\">\r\n      <Menu mode={md ? \"horizontal\" : \"inline\"} onClick={handleClick}>\r\n        <Menu.Item key=\"/?signin=true\" onClick={() => showModal()}>\r\n          Sign in\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Button className=\"signupBtn\">\r\n        <NavLink to=\"/signup\">Sign up </NavLink>\r\n      </Button>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        width={400}\r\n        className=\"sign_modal\"\r\n      >\r\n        <SignIn handleCancel={handleCancel} />\r\n      </Modal>\r\n    </div>\r\n  ) : (\r\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\r\n      <SubMenu key=\"/notes\" title=\"Notes\">\r\n        <Menu.Item key=\"/notes/search\">\r\n          <NavLink to=\"/notes/search\">Search</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/notes/upload\">\r\n          <NavLink to=\"/notes/upload\">Upload</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n\r\n      <SubMenu key=\"/books\" title=\"Books\">\r\n        <Menu.Item key=\"/books/buy\">\r\n          <NavLink to=\"/books/buy\">Buy</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/books/sell\">\r\n          <NavLink to=\"/books/sell\">Sell</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu key=\"/exampapers\" title=\"Exam Papers\">\r\n        <Menu.Item key=\"/exampapers/search\">\r\n          <NavLink to=\"/exampapers/search\">Search</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/exampapers/upload\">\r\n          <NavLink to=\"/exampapers/upload\">Upload</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu key=\"/tuitions\" title=\"Tuitions\">\r\n        <Menu.Item key=\"/tuitions/search\">\r\n          <NavLink to=\"/tuitions/search\">Search</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/tuitions/create\">\r\n          <NavLink to=\"/tuitions/create\">Create</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n\r\n      <Menu.Item key=\"/notification\">\r\n        <NavLink to=\"/notification\">\r\n          <BellOutlined />\r\n        </NavLink>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item key=\"/messages\">\r\n        <NavLink to=\"/messages\">\r\n          <MessageOutlined />\r\n        </NavLink>\r\n      </Menu.Item>\r\n\r\n      <SubMenu\r\n        key=\"sub1\"\r\n        title={\r\n          <>\r\n            <Avatar\r\n              style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\r\n              src={\r\n                userData.profileImg != null\r\n                  ? BASEURL + userData.profileImg\r\n                  : null\r\n              }\r\n            >\r\n              {userData.name ? userData.name.charAt(0) : \"\"}\r\n            </Avatar>\r\n            <span className=\"uname\">{userData.name}</span>\r\n          </>\r\n        }\r\n      >\r\n        <Menu.Item key=\"/myprofile/personalInfo\">\r\n          <NavLink to=\"/myprofile/personalInfo\">My Profile</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/signout\" onClick={() => logout()}>\r\n          <NavLink to=\"\"> Sign Out</NavLink>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MenuItems;\r\n","F:\\reactjs\\prenotes\\src\\context\\SocketProvider.js",[],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContainer.jsx",["193","194"],"F:\\reactjs\\prenotes\\src\\components\\Messanger\\ChatContacts.jsx",[],"F:\\reactjs\\prenotes\\src\\index.js",[],"F:\\reactjs\\prenotes\\src\\context\\AuthContext.js",[],"F:\\reactjs\\prenotes\\src\\helper\\SecureStorage.js",[],"F:\\reactjs\\prenotes\\src\\components\\Books\\Sell\\SellBook.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Home\\Feedback.jsx",[],["195","196"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\Notes\\Notes.jsx",["197"],"F:\\reactjs\\prenotes\\src\\components\\Notes\\Search\\NotesSearch.jsx",["198","199","200","201","202"],"F:\\reactjs\\prenotes\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\reactjs\\prenotes\\src\\components\\Books\\Buy\\BuyBook.jsx",["203","204","205"],"F:\\reactjs\\prenotes\\src\\components\\Auth\\Signup.jsx",[],["206","207"],"F:\\reactjs\\prenotes\\src\\components\\Footer\\Footer.jsx",[],"F:\\reactjs\\prenotes\\src\\context\\NotesContext.js",[],"F:\\reactjs\\prenotes\\src\\context\\ConversationsProvider.js",["208"],"F:\\reactjs\\prenotes\\src\\components\\Profile\\MyUpload\\MyUpload.jsx",[],"F:\\reactjs\\prenotes\\src\\helper\\useSessionStorage.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":31,"column":6,"nodeType":"215","endLine":31,"endColumn":8,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":3,"column":1,"nodeType":"219","endLine":21,"endColumn":3},{"ruleId":"209","replacedBy":"220"},{"ruleId":"211","replacedBy":"221"},{"ruleId":"217","severity":1,"message":"222","line":32,"column":1,"nodeType":"219","endLine":37,"endColumn":3},{"ruleId":"209","replacedBy":"223"},{"ruleId":"211","replacedBy":"224"},{"ruleId":"213","severity":1,"message":"225","line":192,"column":6,"nodeType":"215","endLine":192,"endColumn":16,"suggestions":"226"},{"ruleId":"213","severity":1,"message":"227","line":45,"column":6,"nodeType":"215","endLine":45,"endColumn":23,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":41,"column":10,"nodeType":"231","messageId":"232","endLine":41,"endColumn":14},{"ruleId":"229","severity":1,"message":"233","line":46,"column":12,"nodeType":"231","messageId":"232","endLine":46,"endColumn":19},{"ruleId":"213","severity":1,"message":"234","line":53,"column":6,"nodeType":"215","endLine":53,"endColumn":23,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":121,"column":31,"nodeType":"238","endLine":121,"endColumn":46},{"ruleId":"239","severity":1,"message":"240","line":130,"column":46,"nodeType":"241","messageId":"242","endLine":130,"endColumn":48},{"ruleId":"236","severity":1,"message":"237","line":133,"column":33,"nodeType":"238","endLine":133,"endColumn":48},{"ruleId":"229","severity":1,"message":"243","line":10,"column":9,"nodeType":"231","messageId":"232","endLine":10,"endColumn":16},{"ruleId":"209","replacedBy":"244"},{"ruleId":"211","replacedBy":"245"},{"ruleId":"213","severity":1,"message":"246","line":49,"column":6,"nodeType":"215","endLine":49,"endColumn":23,"suggestions":"247"},{"ruleId":"209","replacedBy":"248"},{"ruleId":"211","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":141,"column":9,"nodeType":"252","endLine":141,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":222,"column":33,"nodeType":"238","endLine":222,"endColumn":48},{"ruleId":"239","severity":1,"message":"240","line":231,"column":48,"nodeType":"241","messageId":"242","endLine":231,"endColumn":50},{"ruleId":"236","severity":1,"message":"237","line":234,"column":35,"nodeType":"238","endLine":234,"endColumn":50},{"ruleId":"250","severity":1,"message":"251","line":56,"column":15,"nodeType":"252","endLine":56,"endColumn":55},{"ruleId":"229","severity":1,"message":"253","line":2,"column":18,"nodeType":"231","messageId":"232","endLine":2,"endColumn":23},{"ruleId":"213","severity":1,"message":"254","line":38,"column":6,"nodeType":"215","endLine":38,"endColumn":28,"suggestions":"255"},{"ruleId":"213","severity":1,"message":"256","line":67,"column":6,"nodeType":"215","endLine":67,"endColumn":14,"suggestions":"257"},{"ruleId":"209","replacedBy":"258"},{"ruleId":"211","replacedBy":"259"},{"ruleId":"213","severity":1,"message":"260","line":52,"column":6,"nodeType":"215","endLine":52,"endColumn":23,"suggestions":"261"},{"ruleId":"213","severity":1,"message":"262","line":142,"column":6,"nodeType":"215","endLine":142,"endColumn":8,"suggestions":"263"},{"ruleId":"250","severity":1,"message":"251","line":147,"column":9,"nodeType":"252","endLine":147,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":198,"column":57,"nodeType":"238","endLine":198,"endColumn":72},{"ruleId":"236","severity":1,"message":"237","line":222,"column":33,"nodeType":"238","endLine":222,"endColumn":48},{"ruleId":"236","severity":1,"message":"237","line":230,"column":33,"nodeType":"238","endLine":230,"endColumn":48},{"ruleId":"213","severity":1,"message":"264","line":91,"column":6,"nodeType":"215","endLine":91,"endColumn":23,"suggestions":"265"},{"ruleId":"250","severity":1,"message":"251","line":96,"column":9,"nodeType":"252","endLine":96,"endColumn":37},{"ruleId":"266","severity":1,"message":"267","line":137,"column":25,"nodeType":"252","endLine":137,"endColumn":78},{"ruleId":"209","replacedBy":"268"},{"ruleId":"211","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":58,"column":74,"nodeType":"272","messageId":"273","endLine":58,"endColumn":76},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["276"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["274"],["275"],"Assign object to a variable before exporting as module default",["274"],["275"],"React Hook useEffect has missing dependencies: 'eduForm' and 'infoForm'. Either include them or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.",["278"],"no-unused-vars","'form' is assigned a value but never used.","Identifier","unusedVar","'confirm' is defined but never used.","React Hook useEffect has a missing dependency: 'getExampaper'. Either include it or remove the dependency array.",["279"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BASEURL' is assigned a value but never used.",["274"],["275"],"React Hook useEffect has a missing dependency: 'fetchContacts'. Either include it or remove the dependency array.",["280"],["274"],["275"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'handleMessages'. Either include it or remove the dependency array.",["282"],["274"],["275"],"React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has missing dependencies: 'form' and 'props.location.state'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'getAllBooks'. Either include it or remove the dependency array.",["285"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["274"],["275"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [getUser]",{"range":"306","text":"307"},"Update the dependencies array to be: [eduForm, infoForm, userData]",{"range":"308","text":"309"},"Update the dependencies array to be: [getBooks, userData.iduser]",{"range":"310","text":"311"},"Update the dependencies array to be: [getExampaper, userData.iduser]",{"range":"312","text":"313"},"Update the dependencies array to be: [fetchContacts, userData.iduser]",{"range":"314","text":"315"},"Update the dependencies array to be: [friendDetails.roomId, getMessages]",{"range":"316","text":"317"},"Update the dependencies array to be: [handleMessages, socket]",{"range":"318","text":"319"},"Update the dependencies array to be: [getNotes, userData.iduser]",{"range":"320","text":"321"},"Update the dependencies array to be: [form, props.location.state]",{"range":"322","text":"323"},"Update the dependencies array to be: [getAllBooks, userData.iduser]",{"range":"324","text":"325"},[1256,1258],"[getUser]",[5381,5391],"[eduForm, infoForm, userData]",[1099,1116],"[getBooks, userData.iduser]",[1416,1433],"[getExampaper, userData.iduser]",[1802,1819],"[fetchContacts, userData.iduser]",[1303,1325],"[friendDetails.roomId, getMessages]",[1968,1976],"[handleMessages, socket]",[1296,1313],"[getNotes, userData.iduser]",[3366,3368],"[form, props.location.state]",[2656,2673],"[getAllBooks, userData.iduser]"]